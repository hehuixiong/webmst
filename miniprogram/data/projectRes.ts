export const data = {
  1: "<p><strong>技能特长</strong></p><ul><li>熟练掌握HTML5、CSS3、JavaScript、jQuery&nbsp;等前端技术制作前端页面（pc端&nbsp;h5&nbsp;手机端均可）</li><li>熟料掌握DOM、BOM操作,熟悉面向对象编程及es6新语法</li><li>掌握AJAX异步通信技术，熟悉正则表达式、JS面向对象</li><li>熟悉MVC或者MVVM设计&nbsp;模式与模块化开发流程</li><li>能够运用&nbsp;vue全家桶技术&nbsp;或&nbsp;React框架结合&nbsp;AntDesign&nbsp;组件库&nbsp;编写后台管理系统</li><li>能够运用vue.js&nbsp;结合&nbsp;vant&nbsp;组件库开发移动端的项目</li><li>掌握uniapp框架开发微信小程序、App、公众号以及H5项目</li><li>掌握微信小程序微信公众号静默授权及功能的原生开发</li><li>熟练运用mockjs、Echarts、axios等多种插件</li><li>熟练掌握git基本掌握、并了解Navcat、PostMan&nbsp;等常用工具软件</li><li>了解WebSococt&nbsp;技术&nbsp;进而可以实现直播系统的聊天室功能</li><li>熟悉&nbsp;SQL&nbsp;语言，能通过&nbsp;MySQL&nbsp;进行数据的增删改查与表的&nbsp;基本操作</li><li>基本理解nuxt框架，用来做SSR渲染，做利于搜索引擎的SEO优化的网站</li></ul><ul><li>能够使用Node、Express、Mysql&nbsp;开发后端，编写接口，实现前后端交互</li></ul><p><br></p><p><strong>项目一：某企业后台管理系统(pc)</strong></p><p><strong>使用技术：</strong>Vue-cli+Vue-router+vuex+stylus+axios+iconfont+element+高德API</p><p><strong>项目描述：</strong>是一套可满足政企、商户、租赁、展会、班车出行及生活服务设置等综合性大型后台管理系统，包括业务管理（运维中心、调度中心）、企业管理（人员管理、车辆管理、合作管理、企业设置）、财务管理、个人管理、消息中心。</p><p><strong>我的职责:</strong></p><ul><li>使用gitlab版本控制,对项目进行管理，方便项目后期整合，测试</li><li>封装引用国内优秀可视化工具ECharts,完成数据可视化需求</li><li>使用vue-cli搭建项目，使用vue-router进行路由管理，使用vuex与sessionStorage进行数据存取，组件之间传值。</li><li>对上传图片组件封装,对Element组件进行二次封装成公用组件，如如顶部搜索，table列表等，并使用slot插槽使其可自定义化。</li><li>对公用样式进行封装，使用mixins对公用属性、公用方法进行定义，混入到各个组件中使用，方便管理与统一修改</li><li>设置axios请求响应拦截器,api接口封装。</li><li>负责结算规则,司机签到等板块列表增删改查，侧滑栏详情操作，各页面dialog弹框表单设置</li><li>完成子域名配置及企业背景图自定义</li></ul><p><br></p><p><strong>项目二：某企业审核大后台管理系统(pc)</strong></p><p><strong>使用技术：</strong>html，css，js,vue-cli，axios，vue-router&nbsp;，vuex，less，Element-ui；</p><p><strong>功能描述：</strong>是对中台管理系统进行管理数据以及审核的小型后台管理系统包括用户服务、企业服务、入口审核、产品审核、收款明细、系统管理、个人用户、企业用户、生活服务、租行服务、平台业务模块</p><p><strong>我的职责：</strong></p><ul><li>使用gitlab版本控制,对项目进行管理，方便项目后期整合，测试</li><li>运用vue+elementUI准确地完成界面布局开发，还原UI设计。</li><li>使用h5新特性做缓存与性能优化</li><li>使用vue-cli创建项目，灵活使用vue完成数据双向绑定,路由系统,&nbsp;编程式导航实现参数传递</li><li>调用高德api获取当前城市及天气信息</li><li>处理常见的页面浏览器兼容问题,以及首页加载慢等问题</li><li>使用webpack完成模块化管理与项目打包</li><li>定义&nbsp;meta&nbsp;方法控制&nbsp;router&nbsp;路由导航守卫，使用正则对用户信息进行校验</li></ul>",
  2: "<p><strong>项目简介：</strong></p><p>一个基于&nbsp;原生js下开发的订餐小程序(用户端),实现的功能有：用户定位、页面的菜品展示、菜品分类、详情、加入购物车、清空购物车、添加地址、删除和编辑地址，点餐配送时间营业时间&nbsp;及优惠券使用&nbsp;等&nbsp;以及商户端的部分功能</p><p>•&nbsp;结合微信小程序开发文档完成功能开发</p><p>•&nbsp;使用&nbsp;git工具拉取合并等管理代码；</p><p>•&nbsp;页面编写使用&nbsp;flex&nbsp;布局,运用大量CSS3动画实现动态效果。</p><p>•&nbsp;实现头部固定、轮播图、tab&nbsp;切换、插入视频&nbsp;等功能</p><p>•&nbsp;封装JS完成页面可视化需求以及交互效果&nbsp;并抽取公共组件，并使项目模块化，组件化。</p><p>•&nbsp;熟练使用css3新特性及es6新语法</p><p>•&nbsp;使用Ajax，Json封装，完成后台数据传递实现多种功能，</p><p>•&nbsp;使用&nbsp;promise&nbsp;对象&nbsp;then&nbsp;方法链式调用&nbsp;解决异步问题</p><p>•&nbsp;准确定位项目中的问题并解决并提高效率</p><p>•&nbsp;解决使用&nbsp;onShow&nbsp;生命周&nbsp;期解决返回上一个页面不刷新等问题</p>",
  3: "<p><strong>使用技术：</strong>前端:vue-cli，axios，vue-router&nbsp;，vux，Vant等；后端:Node，MySQL，jwt，md5，Express，阿里云短信服&nbsp;务，multer等</p><p><strong>功能描述：</strong>商品展示，商品详情，分类展示数据，加入购物车、登录/注册等</p><p><strong>我的职责：</strong></p><p>•&nbsp;使用gitee版本控制,对项目进行管理，方便项目后期整合，测试</p><p>•&nbsp;使用vue-cli&nbsp;快速创建项目，灵活使用vue完成数据双向绑定,路由系统,&nbsp;编程式导航实现参数传递</p><p>•&nbsp;配置ESlint统一代码风格，提高代码质量，方便以后项目维护</p><p>•&nbsp;配合Vant&nbsp;类库快速开发</p><p>•&nbsp;抽取公共组件，并使项目模块化，组件化</p><p>•&nbsp;express&nbsp;和node&nbsp;来编写后端代码&nbsp;navicat管理数据库</p><p>•&nbsp;mysql进行数据的增删改查</p><p>•&nbsp;postman书写项目接口文档并测试，axios调取后台数据</p><p>•&nbsp;使用本地存储.路由导航守卫，账号校验，并添加axios前置拦截器等技术实现登录相关功能</p><p>•&nbsp;后台使用node&nbsp;编写代码实现反向代理&nbsp;用cors解决跨域问题</p><p>•&nbsp;用到vue数据双向绑定实现数据的展示和修改</p><p>•&nbsp;采用了vuex技术全局数据管理</p><p>•&nbsp;熟练运用组件间传值相关知识点</p><p>•&nbsp;解决项目中需要但之前没接触的问题</p>",
  4: "<p><strong>项目描述：</strong>这是一个商城类的项目，用户可以在线购买商品，加入购物车，下单商品，也可以对已购买的商品进行评论，管理员可以在后台中进行商品的上下架，促销活动，也可以监控到商品的销售状况。</p><p><strong>主要技术：</strong>Html5、less、JaveScript、Vue、Vue-router、Axios、Element-UI&nbsp;库等</p><p><strong>我的职责：</strong></p><ul><li>使用&nbsp;javescript+vue&nbsp;完成页面交互设计。</li><li>根据&nbsp;ui&nbsp;设计稿搭建网页，使用&nbsp;flex&nbsp;布局页面</li><li>获取后端&nbsp;api，实现商品列表、商品详情、购物车等功能</li><li>对图片进行懒加载，在载入界面时监听滚动事件达到懒加载，让页面的的加载速度变快，优化性能。</li><li>在项目中尽量使用字体图标&nbsp;iconfont&nbsp;代替图片，不会失真且生成文件小。</li><li>使用&nbsp;requestAnimationFrame&nbsp;解决画面丢帧问题。</li></ul>",
  5: "<p><strong>主要技术：</strong>Html5、css3、JaveScript、Vue、Vue-router、Axios、Element-UI&nbsp;库等</p><p><strong>项目描述：</strong>微社区后台系统管理是用&nbsp;vue&nbsp;搭建的后台管理项目，用于操作、管理社区人员信息，采用表格、图形等显示信息，以及进行数据的增删改查。</p><p><strong>我的职责:</strong></p><ul><li>负责项目后台管理,对人员信息管理</li><li>使用&nbsp;vue&nbsp;及其组件进行搭建和页面路由配置</li><li>使用路由懒加载进行项目优化</li><li>使用&nbsp;vuex&nbsp;对后端提供的数据接口进行封装并将获取数据展示到页面上</li></ul>",
  6: "<p><strong>项目背景：</strong>本项目是基于uni-app框架使用Vue.js语法一套代码多端发布的移动端资讯App</p><p><strong>项目描述：</strong></p><ul><li>核心模块：个人中心模块，文章模块，关注模块</li><li>权限界面：关注界面，个人发布文章界面，反馈意见界面，标签管理界面</li><li>用户功能模块：用户登录</li><li>功能描述：文章列表展示；搜索文章；文章详情展示；文章评论+当前评论指定回复；文章点赞+收藏+关注作者；个人中心实现用户头像上传，意见反馈+多图片上传</li></ul><p><strong>项目实现：</strong></p><ul><li>使用uni-app内置组件完成页面快速布局，Sass编写样式代码，通过Vue.js语法处理页面功能逻辑，Vuex共享数据</li><li>使用uniCloud云开发实现后端服务</li><li>通过uni-app里面的条件编译更好的处理多端发布的兼容性问题</li><li>由于uni-app没有路由守卫，所有通过三方插件uni-simple-router实现路由组件的重新定义并进行路由守卫添加进行权限认证</li><li>对封装好的http请求方法，使用webpack的require.context方法对所有的请求函数进行收集，在main.js进行方法挂载。简化请求接口操作，使得不需要每次显式的调用import导入模块</li><li>选项卡操作会对文章列表进行高频切换，对于这种每次都去请求数据的耗时操作进行数据缓存。在初始化第一次进行数据请求的时候，进行对每一项数据的存储，后续的渲染过程中使用本地缓存数据即可</li></ul>",
  7: "<p><strong>项目背景：</strong>基于Vue2开发的web端后台管理系统。用于管理制造企业BOM物料生产管理进度，统计项目金额，生产需求情况对比</p><p><strong>项目描述：</strong></p><ul><li>使用Vue&nbsp;I18n国际化插件进行中英文翻译</li><li>前后端同时开发，后端接口未完成时使用Mock.js模拟数据</li><li>使用Element-Ui组件库进行页面快速布局，ECharts直观的对数据进行可视化展示</li><li>使用Vue全家桶，Vue-Router进行导航守卫，实现页面跳转；Vuex管理用户信息、权限认证；运用组件化思想细分模块开发</li><li>通过封装Axios请求后端接口数据，使用ES7语法async、await优化异步编程代码风格，解决回调地狱问题</li><li>使用路由懒加载，按需加载数据，提高响应速度</li></ul><p><strong>技术栈：</strong>Vue2、Vuex、Vue-Router、Element-Ui、ECharts、Mock、Axios</p>",
  8: "<p><strong>项目背景：</strong>基于Vue2开发的web端后台管理系统。用于管理公司仓库商品信息（进销存），审批流程，数据报表，成本核算</p><p><strong>项目描述：</strong></p><ul><li>使用Token会话保持技术，并将Token进行本地存储。在Vue-Router中设置导航守卫，Axios中请求响应拦截，完成用户登录权限认证，保证拥有获取数据的权限</li><li>使用Vuex状态管理，方便数据共享和传递。当数据传递层级关系不复杂通过props或事件总线来完成</li><li>使用高德地图获取收货地址信息，查看收货地址范围</li><li>根据选择的商品名称、商品规格生成笛卡尔积进行商品出库入库操作</li><li>通过Git命令进行团队协作开发</li><li>将重复使用到的逻辑代码封装成一个通用的模块，对于出现三次相同功能Vue组件页面进行组件封装复用</li></ul><p><strong>技术栈：</strong>Vue2、Vuex、Vue-Router、Element-Ui、Axios、高德地图</p>"
}