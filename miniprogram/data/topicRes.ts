export const topicRes = {
    "aa2840ae-f884-4fcb-a08b-e20310654dbd": {
        "topic": `<div class="markdown-body"><p>给你一个由 <code>'1'</code>（陆地）和 <code>'0'</code>（水）组成的的二维网格，请你计算网格中岛屿的数量。</p>
    <p>岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。</p>
    <p>此外，你可以假设该网格的四条边均被水包围。</p>
    <p><strong>示例 1：</strong></p>
    <p><strong>输入：</strong></p>
    <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>grid </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">]</span></code></div></div></pre>
    <p><strong>输出：</strong> 1</p>
    <p><strong>示例 2：</strong></p>
    <p><strong>输入：</strong></p>
    <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>grid </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"0"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">]</span></code></div></div></pre>
    <p><strong>输出：</strong> 3</p>
    <p><strong>提示：</strong></p>
    <ul>
    <li><code>m == grid.length</code></li>
    <li><code>n == grid[i].length</code></li>
    <li><code>1 &lt;= m, n &lt;= 300</code></li>
    <li><code>grid[i][j]</code> 的值为 <code>'0'</code> 或 <code>'1'</code></li>
    </ul>
    <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token doc-comment" style="color: rgb(124, 124, 124);">/**
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> * </span><span class="token doc-comment" style="color: rgb(150, 203, 254);">@param</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> </span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">{</span><span class="token doc-comment" style="color: rgb(255, 255, 182); text-decoration: underline;">character</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">[</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">]</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">[</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">]</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">}</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> </span><span class="token doc-comment parameter" style="color: rgb(124, 124, 124);">grid</span><span class="token doc-comment" style="color: rgb(124, 124, 124);">
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> * </span><span class="token doc-comment" style="color: rgb(150, 203, 254);">@return</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> </span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">{</span><span class="token doc-comment" style="color: rgb(255, 255, 182); text-decoration: underline;">number</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">}</span><span class="token doc-comment" style="color: rgb(124, 124, 124);">
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> */</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">numIslands</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span>
    <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">;</span></code></div></div></pre></div>`,
        "answer": `<div class="markdown-body"><h2>方法一：深度优先搜索</h2>
    <p>我们可以将二维网格看成一个无向图，竖直或水平相邻的 11 之间有边相连。</p>
    <p>为了求出岛屿的数量，我们可以扫描整个二维网格。如果一个位置为 11，则以其为起始节点开始进行深度优先搜索。在深度优先搜索的过程中，每个搜索到的 11 都会被重新标记为 00。</p>
    <p>最终岛屿的数量就是我们进行深度优先搜索的次数。</p>
    <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">numIslands</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> count </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>      </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'1'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>        count</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>        </span><span class="token" style="color: rgb(218, 208, 133);">turnZero</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>      </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> count
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">turnZero</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">i</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> j</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span> 
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>       </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'0'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>  grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'0'</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>  </span><span class="token" style="color: rgb(218, 208, 133);">turnZero</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>  </span><span class="token" style="color: rgb(218, 208, 133);">turnZero</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>  </span><span class="token" style="color: rgb(218, 208, 133);">turnZero</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>  </span><span class="token" style="color: rgb(218, 208, 133);">turnZero</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
    <p><strong>复杂度分析</strong></p>
    <ul>
    <li>时间复杂度：O(MN)，其中 M 和 N 分别为行数和列数。</li>
    <li>空间复杂度：O(MN)，在最坏情况下，整个网格均为陆地，深度优先搜索的深度达到 MN。</li>
    </ul>
    <h2>方法二：广度优先搜索</h2>
    <p>同样地，我们也可以使用广度优先搜索代替深度优先搜索。</p>
    <p>为了求出岛屿的数量，我们可以扫描整个二维网格。如果一个位置为 11，则将其加入队列，开始进行广度优先搜索。在广度优先搜索的过程中，每个搜索到的 11 都会被重新标记为 00。直到队列为空，搜索结束。</p>
    <p>最终岛屿的数量就是我们进行广度优先搜索的次数。</p>
    <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">numIslands</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> count </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> queue </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>      </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'1'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>        count</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>        grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'0'</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 做标记，避免重复遍历</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>        queue</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">push</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>        </span><span class="token" style="color: rgb(218, 208, 133);">turnZero</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>queue</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>      </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> count
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">turnZero</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">queue</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> dirs </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">while</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>queue</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> cur </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> queue</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">shift</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> dir </span><span class="token" style="color: rgb(150, 203, 254);">of</span><span> dirs</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>      </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> x </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> cur</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> dir</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>      </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> y </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> cur</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> dir</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>      </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> x </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> y </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> y </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>y</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">!==</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'1'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">continue</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span>      </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">26</span><span>      grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>y</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'0'</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">27</span><span>      queue</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">push</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> y</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">28</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">29</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">30</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
    <p><strong>复杂度分析</strong></p>
    <ul>
    <li>时间复杂度：O(MN)，其中 M 和 N 分别为行数和列数。</li>
    <li>空间复杂度：O(min(M,N))，在最坏情况下，整个网格均为陆地，队列的大小可以达到 min(M,N)。</li>
    </ul>
    <h2>方法三：并查集</h2>
    <p>同样地，我们也可以使用并查集代替搜索。</p>
    <p>为了求出岛屿的数量，我们可以扫描整个二维网格。如果一个位置为 1，则将其与相邻四个方向上的 1 在并查集中进行合并。</p>
    <p>最终岛屿的数量就是并查集中连通分量的数目。</p>
    <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token doc-comment" style="color: rgb(124, 124, 124);">/**
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> * </span><span class="token doc-comment" style="color: rgb(150, 203, 254);">@param</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> </span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">{</span><span class="token doc-comment" style="color: rgb(255, 255, 182); text-decoration: underline;">character</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">[</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">]</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">[</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">]</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">}</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> </span><span class="token doc-comment parameter" style="color: rgb(124, 124, 124);">grid</span><span class="token doc-comment" style="color: rgb(124, 124, 124);">
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> * </span><span class="token doc-comment" style="color: rgb(150, 203, 254);">@return</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> </span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">{</span><span class="token doc-comment" style="color: rgb(255, 255, 182); text-decoration: underline;">number</span><span class="token doc-comment" style="color: rgb(197, 200, 198); text-decoration: underline;">}</span><span class="token doc-comment" style="color: rgb(124, 124, 124);">
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span class="token doc-comment" style="color: rgb(124, 124, 124);"> */</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">numIslands</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">grid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">Y</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">X</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> uf </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">UnionFind</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span>
    <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">Y</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">X</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>            </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> uf</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">makeSet</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span>
    <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">Y</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">X</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>            </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>                </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i </span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>                </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">Y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&amp;&amp;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> uf</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">union</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 右侧</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>                </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>j </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">X</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&amp;&amp;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>grid</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> uf</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">union</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 下侧</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>            </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span>
    <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">26</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> uf</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">getCount</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">27</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">28</span><span></span><span class="token" style="color: rgb(150, 203, 254);">class</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">UnionFind</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">29</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">constructor</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">30</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">parents</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">31</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">count</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">32</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">33</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">makeSet</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">x</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">34</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">parents</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> x </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">''</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">35</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">count</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">36</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">37</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">findSet</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">x</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 路径压缩，查x的根节点</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">38</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">while</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">parents</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">!==</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">''</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">39</span><span>            x </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">parents</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">40</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">41</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> x </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">''</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">42</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">43</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">union</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">x</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">44</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">link</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">findSet</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">findSet</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">45</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">46</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">link</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">x</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">47</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">48</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">parents</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> y</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">49</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">count</span><span class="token" style="color: rgb(237, 237, 237);">--</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">50</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">51</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">getCount</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">52</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">count</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">53</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">54</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
    <p><strong>复杂度分析</strong></p>
    <ul>
    <li>时间复杂度：O(MN×α(MN))，其中 MM 和 NN 分别为行数和列数。注意当使用路径压缩（见 find 函数）和按秩合并（见数组 rank）实现并查集时，单次操作的时间复杂度为 α(MN)，其中 α(x) 为反阿克曼函数，当自变量 xx 的值在人类可观测的范围内（宇宙中粒子的数量）时，函数 α(x) 的值不会超过 5，因此也可以看成是常数时间复杂度。</li>
    <li>空间复杂度：O(MN)，这是并查集需要使用的空间。</li>
    </ul></div>`
    },
    "8ee27192-8ae7-4e03-a32c-b00db276a83f": {
        "topic": `<div class="markdown-body"><pre><div class="codeBox___24JI7"><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;">
    <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> name </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'window'</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> obj </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token literal-property" style="color: rgb(150, 203, 254);">name</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'obj'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token function-variable" style="color: rgb(218, 208, 133);">sayName</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>        </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>obj</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method-variable function-variable method property-access" style="color: rgb(218, 208, 133);">sayMyName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> fn1 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> obj</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">sayName</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> fn2 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> obj</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">sayMyName</span><span>
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span></span><span class="token" style="color: rgb(218, 208, 133);">fn1</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> 
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>obj</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">sayName</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> 
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span></span><span class="token" style="color: rgb(218, 208, 133);">fn2</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> 
    </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>obj</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">sayMyName</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span></code></div></div></pre></div>`,
        "answer": `<div class="markdown-body"><p>依次输出：</p>
    <pre><code>
    window
    obj
    window
    window
    </code></pre>
    <p>本次主要考察对this指向的理解，题目比较简单，不做具体的分析。</p>
    </div>`
    },
    "2022f7f8-f3ec-4f8a-9971-9d5572d3e106": {
        "answer": 'addEventListener绑定几次就执行几次'
    },
    "3925cf74-ee93-49fd-8896-8bc7221f32a4": {
        "answer": `<div class="markdown-body"><p>答案： <strong>会继续执行</strong>。</p>
        <p>虽然<strong>Promise</strong>是开发过程中使用非常频繁的一个技术点，但是它的一些细节可能很多人都没有去关注过。我们都知道<code>.then</code>, <code>.catch</code>, <code>.finally</code>都可以链式调用，其本质上是因为返回了一个新的<strong>Promise</strong>实例。</p>
        <p>catch的语法形式如下：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-javascript" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>p</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token control-flow" style="color: rgb(150, 203, 254);">catch</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>onRejected</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span></code></div></div></pre>
        <p><code>.catch</code>只会处理<code>rejected</code>的情况，并且也会返回一个新的<code>Promise</code>实例。</p>
        <p><code>.catch(onRejected)</code>与<code>then(undefined, onRejected)</code>在表现上是一致的。</p>
        <p>事实上，catch(onRejected)从内部调用了then(undefined, onRejected)。</p>
        <ul>
        <li>如果<code>.catch(onRejected)</code>的<code>onRejected</code>回调中返回了一个状态为<code>rejected</code>的<code>Promise</code>实例，那么<code>.catch</code>返回的<code>Promise</code>实例的状态也将变成<code>rejected</code>。</li>
        <li>如果<code>.catch(onRejected)</code>的<code>onRejected</code>回调中抛出了异常，那么<code>.catch</code>返回的<code>Promise</code>实例的状态也将变成<code>rejected</code>。</li>
        <li>其他情况下，<code>.catch</code>返回的<code>Promise</code>实例的状态将是<code>fulfilled</code>。</li>
        </ul></div>`
    },
    "2572a1d9-4018-49c3-9934-1fe1be0889b2": {
        "answer": `<div class="markdown-body"><h2>明确函数的双重用途</h2>
        <p><code>JavaScript</code> 中的函数一般有两种使用方式:</p>
        <ul>
        <li>当作构造函数使用: <code>new Func()</code></li>
        <li>当作普通函数使用: <code>Func()</code></li>
        </ul>
        <p>但 <code>JavaScript</code> 内部并没有区分两者的方式，我们人为规定<strong>构造函数名首字母要大写</strong>作为区分。也就是说，构造函数被当成普通函数调用不会有报错提示。</p>
        <p>下面来举个栗子:</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">// 定义构造函数 Person</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">firstName</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> lastName</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">firstName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> firstName</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">lastName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> lastName</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">fullName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">firstName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">lastName</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 使用 new 调用</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"战场"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"小包"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 当作普通函数调用</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"战场"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"小包"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <p>输出结果:</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01af393ccf114ccd85fb53f683f60ed2~tplv-k3u1fbpfcp-watermark.image?"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p>通过输出结果可以发现，定义的构造函数被当作普通函数来调用，没有任何错误提示。</p>
        <h2>使用 instanceof 实现</h2>
        <h3>instanceof 基础知识</h3>
        <p><code>instanceof</code> 运算符用于检测构造函数的 <code>prototype</code> 属性是否出现在某个实例对象的原型链上。</p>
        <p>使用语法:</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>object </span><span class="token" style="color: rgb(150, 203, 254);">instanceof</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">constructor</span></code></div></div></pre>
        <p>我们可以使用 <code>instanceof</code> 检测某个对象是不是另一个对象的实例，例如 <code>new Person() instanceof Person --&gt; true</code></p>
        <h3>new 绑定/ 默认绑定</h3>
        <ul>
        <li>通过 <code>new</code> 来调用构造函数，会生成一个新对象，并且把这个新对象绑定为调用函数的 <code>this</code> 。</li>
        <li>如果普通调用函数，非严格模式 <code>this</code> 指向 <code>window</code>，严格模式指向 <code>undefined</code></li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Test</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// Window {...}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Test</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// Test {}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Test</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <p>使用 <code>new</code> 调用函数和普通调用函数最大的区别在于<strong>函数内部 <code>this</code> 指向不同: <code>new</code> 调用后 <code>this</code> 指向实例，普通调用则会指向 <code>window</code></strong>。</p>
        <p><code>instanceof</code> 可以检测某个对象是不是另一个对象的实例。如果为 <code>new</code> 调用， <code>this</code> 指向实例，<strong>this instanceof 构造函数</strong> 返回值为 <code>true</code> ，普通调用返回值为 <code>false</code>。</p>
        <h3>代码实现</h3>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">firstName</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> lastName</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">// this instanceof Person</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">// 如果返回值为 false，说明为普通调用</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">// 返回类型错误信息——当前构造函数需要使用 new 调用</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(237, 237, 237);">!</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">instanceof</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">throw</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">TypeError</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'Function constructor A cannot be invoked without "new"'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">firstName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> firstName</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">lastName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> lastName</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">fullName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">firstName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">lastName</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 当作普通函数调用</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// Uncaught TypeError: Function constructor A cannot be invoked without "new"</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"战场"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"小包"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span></code></div></div></pre>
        <p>通过输出结果，我们可以发现，定义的 <code>Person</code> 构造函数已经无法被普通调用了。撒花~~~</p>
        <p>但这种方案并不是完美的，存在一点小小的瑕疵。我们可以通过伪造实例的方法骗过构造函数里的判断。</p>
        <p>具体实现: <code>JavaScript</code> 提供的 <code>apply/call</code> 方法可以修改 <code>this</code> 指向，如果调用时将 <code>this</code> 指向修改为 <code>Person</code> 实例，就可以成功骗过上面的语法。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">// 输出结果 undefined</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token maybe-class-name">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">call</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"战场"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"小包"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span></code></div></div></pre>
        <p>这点瑕疵虽说无伤大雅，但经过小包的学习，<code>ES6</code> 中提供了更好的方案。</p>
        <h2>new.target</h2>
        <p><code>JavaScript</code> 官方也发现了这个让人棘手的问题，因此 <code>ES6</code> 中提供了 <code>new.target</code> 属性。</p>
        <p>《ECMAScript 6 入门》中讲到:
        <code>ES6</code> 为 <code>new</code> 命令引入了一个 <code>new.target</code> 属性，该属性一般用在构造函数之中，返回 <code>new</code> 命令作用于的那个构造函数。如果构造函数不是通过 <code>new</code> 命令或 <code>Reflect.construct()</code> 调用的，<code>new.target</code> 会返回 <code>undefined</code> ，<strong>因此这个属性可以用来确定构造函数是怎么调用的</strong>。</p>
        <p><code>new.target</code> 就是为确定构造函数的调用方式而生的，太符合这个场景了，我们来试一下 <code>new.target</code> 的用法。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">target</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// new: Person&nbsp;{}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"new: "</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// not new: undefined</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"not new:"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <p>所以我们就可以使用 <code>new.target</code> 来非常简单的实现对构造函数的限制。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(237, 237, 237);">!</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">target</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">throw</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">TypeError</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'Function constructor A cannot be invoked without "new"'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// Uncaught TypeError: Function constructor A cannot be invoked without "new"</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"not new:"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <h2>使用ES6 Class</h2>
        <p>类也具备限制构造函数只能用 <code>new</code> 调用的作用。</p>
        <p><code>ES6</code> 提供 <code>Class</code> 作为构造函数的语法糖，来实现语义化更好的面向对象编程，并且对 <code>Class</code> 进行了规定：<strong>类的构造器必须使用 new 来调用</strong>。</p>
        <p>因此后续在进行面向对象编程时，强烈推荐使用 <code>ES6</code> 的 <code>Class</code>。 <code>Class</code> 修复了很多 <code>ES5</code> 面向对象编程的缺陷，例如类中的所有方法都是不可枚举的；类的所有方法都无法被当作构造函数使用等。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">class</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">constructor</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// Uncaught TypeError: Class constructor Person cannot be invoked without 'new'</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <p>学到这里我就不由得好奇了，既然 <code>Class</code> 必须使用 <code>new</code> 来调用，那提供 <code>new.target</code> 属性的意义在哪里？</p>
        <h2>new.target 实现抽象类</h2>
        <p>首先来看一下 <code>new.target</code> 在类中使用会返回什么？</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">class</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">constructor</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>        </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">target</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <p>输出结果:</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/673b0eb9b3124b63bc72066c0533f7d8~tplv-k3u1fbpfcp-watermark.image?"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p><code>Class</code> 内部调用 <code>new.target</code>，会返回当前 <code>Class</code>。</p>
        <p>《ECMAScript 6 入门》中又讲到: <strong>需要注意的是，子类继承父类时，<code>new.target</code>会返回子类</strong>。继承中的 <code>new.target</code> 好像有不一样的花样，我们来试一下。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">class</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Animal</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">constructor</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">type</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> name</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> age</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">type</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> type</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">age</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> age</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>        </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">target</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// extends 是 Class 中实现继承的关键字</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(150, 203, 254);">class</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Dog</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">extends</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Animal</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">constructor</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">name</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> age</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">super</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"dog"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"baobao"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> dog </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Dog</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <p>输出结果:</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0dd72beb61194c61a61a22733e379802~tplv-k3u1fbpfcp-watermark.image?"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p>通过上面案例，我们可以发现子类调用和父类调用的返回结果是不同的，我们利用这个特性，就可以实现父类不可调用而子类可以调用的情况——面向对象中的<strong>抽象类</strong></p>
        <h3>抽象类实现</h3>
        <p>什么是抽象类那？我们以动物世界为例。</p>
        <p>我们定义了一个动物类 <code>Animal</code>，并且通过这个类来创建动物，动物是个抽象概念，当你提到动物类时，你并不知道我会创建什么动物。只有将动物实体化，比如说猫，狗，猪啊，这才是具体的动物，并且每个动物的行为都会有所不同。因此我们不应该通过创建 <code>Animal</code> 实例来生成动物，<code>Animal</code> 只是动物抽象概念的集合。</p>
        <p><code>Animal</code> 就是一个抽象类，我们不应该通过它来生成动物，而是通过它的子类，例如 <code>Dog、Cat</code> 等来生成对应的 <code>dog/cat</code> 实例。</p>
        <p><code>new.target</code> 子类调用和父类调用的返回值是不同的，所以我们可以借助 <code>new.target</code> 实现抽象类</p>
        <blockquote>
        <p>抽象类也可以理解为不能独立使用、必须继承后才能使用的类。</p>
        </blockquote>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">class</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Animal</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">constructor</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">type</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> name</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> age</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">new</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">target</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> </span><span class="token maybe-class-name">Animal</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>            </span><span class="token control-flow" style="color: rgb(150, 203, 254);">throw</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">TypeError</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"abstract class cannot new"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">type</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> type</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">age</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> age</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// extends 是 Class 中实现继承的关键字</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span></span><span class="token" style="color: rgb(150, 203, 254);">class</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Dog</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">extends</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Animal</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">constructor</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">name</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> age</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">super</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"dog"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"baobao"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"1"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// Uncaught TypeError: abstract class cannot new</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> dog </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Animal</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"dog"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"baobao"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">18</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <h2>总结</h2>
        <p>本文介绍了三种限制构造函数只能被 <code>new</code> 调用的方案</p>
        <ul>
        <li>借助 <code>instanceof</code> 和 <code>new</code> 绑定的原理，适用于低版本浏览器</li>
        <li>借助 <code>new.target</code> 属性，可与 <code>class</code> 配合定义抽象类</li>
        <li>面向对象编程使用 <code>ES6 class</code>——最佳方案</li>
        </ul></div>`
    },
    "1a143475-08ab-49cc-abc9-62a4bb9249c0": {
        "answer": `<div class="markdown-body"><ul>
        <li>从 <code>构造函数</code> 获得 原型对象：</li>
        </ul>
        <pre><code>构造函数.prototype
        </code></pre>
        <ul>
        <li>从 <code>对象实例</code> 获得 <code>父级原型对象</code>：</li>
        </ul>
        <pre><code>方法一： 对象实例.__proto__        【 有兼容性问题，不建议使用】
        方法二：Object.getPrototypeOf( 对象实例 )
        </code></pre></div>`
    },
    "7625104a-b9e7-4cab-915a-d1cccfa31d5c": {
        "topic": `<div class="markdown-body"><pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(218, 208, 133);">foo</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> foo</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">foo</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token function-variable" style="color: rgb(218, 208, 133);">foo</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>  </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre></div>`,
        "answer": `<div class="markdown-body"><p>答案： 1</p>
        <p>引擎会在解释JavaScript代码之前首先对齐进行编译，编译过程中的一部分工作就是找到所有的声明，并用合适的作用域将他们关联起来，这也正是词法作用域的核心内容。</p>
        <p>简单说就是在js代码执行前引擎会先进行预编译，预编译期间会将变量声明与函数声明提升至其对应作用域的最顶端。</p>
        <h2>变量提升</h2>
        <p>变量声明的提升是以变量所处的第一层词法作用域为“单位”的，即全局作用域中声明的变量会提升至全局最顶层，函数内声明的变量只会提升至该函数作用域最顶层。那么开始的一段代码经过预编译则变为：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// undefined</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>a </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"a"</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">foo</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 全局变量会被局部作用域中的同名变量覆盖</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// undefined</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    a </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"a1"</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span></span><span class="token" style="color: rgb(218, 208, 133);">foo</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span></code></div></div></pre>
        <p>输出undefined就很明了。</p>
        <p>ES6新增了let和const关键字，使得js也有了“块”级作用域，而且使用let和const 声明的变量和函数是不存在提升现象的，比较有利于我们养成良好的编程习惯。</p>
        <h2>函数提升</h2>
        <p>有了上面变量提升的说明，函数提升理解起来就比较容易了，但较之变量提升，函数的提升还是有区别的。举例说明：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>foo1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// [Function: foo1]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(218, 208, 133);">foo1</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// foo1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>foo2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// undefined</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(218, 208, 133);">foo2</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// TypeError: foo2 is not a function</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">foo1</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>	</span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"foo1"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">foo2</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>	</span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">"foo2"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">;</span></code></div></div></pre>
        <p>即函数提升只会提升函数声明，而不会提升函数表达式。</p></div>`
    },
    "485b5052-3119-4ced-9473-940489629f99": {
        "answer": `<div class="markdown-body"><h1>RESTful API 基础</h1>
        <blockquote>
        <p>本规范在 API 设计上遵循 REST 架构风格，本部分会针对如何实现 RESTful API，作出说明</p>
        </blockquote>
        <h2>简介</h2>
        <p>REST，全称 Representational State Transfer（表现层状态转化），由 <a href="http://en.wikipedia.org/wiki/Roy_Fielding">Roy Thomas Fielding</a> 在他2000年的 <a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">博士论文</a> 中提出的，是一种被广泛使用的 API 架构风格。</p>
        <h2>资源 Resource</h2>
        <p>在REST API的设计中，首先需要面向资源进行建模，其中每个节点是一个“简单资源”或“集合资源”。 为方便起见，它们通常被分别称为资源和集合。</p>
        <ol>
        <li>一个集合包含<strong>相同类型</strong>的资源列表。 例如，一个用户拥有一组联系人。</li>
        <li>资源具有状态，以及零个或多个子资源。 每个子资源可以是一个简单资源或一个集合资源。</li>
        </ol>
        <h2>方法 Method</h2>
        <p>每个资源都会对应一组操作方法，用户通过 API 来完成对应的操作（使用HTTP Method），常见的操作方法如下：</p>
        <table><thead><tr><th>操作类型</th><th>HTTP 映射</th><th>举例</th></tr></thead><tbody><tr><td>获取资源集合</td><td>GET &lt;collection URL&gt;</td><td>curl -X GET <a href="https://foo.bar.com/api/v1/customers">https://foo.bar.com/api/v1/customers</a></td></tr><tr><td>获取单个资源</td><td>GET &lt;resource URL&gt;</td><td>curl -X GET <a href="https://foo.bar.com/api/v1/customers/123">https://foo.bar.com/api/v1/customers/123</a></td></tr><tr><td>创建资源</td><td>POST &lt;collection URL&gt;</td><td>curl -X POST <a href="https://foo.bar.com/api/v1/customers">https://foo.bar.com/api/v1/customers</a></td></tr><tr><td>更新资源</td><td>PUT &lt;resource URL&gt;</td><td>curl -X PUT <a href="https://foo.bar.com/api/v1/customers/123">https://foo.bar.com/api/v1/customers/123</a></td></tr><tr><td>局部更新资源</td><td>PATCH &lt;resource URL&gt;</td><td>curl -X PATCH <a href="https://foo.bar.com/api/v1/customers/123">https://foo.bar.com/api/v1/customers/123</a></td></tr><tr><td>删除资源</td><td>DELETE &lt;resource URL&gt;</td><td>curl -X DELETE <a href="https://foo.bar.com/api/v1/customers/123">https://foo.bar.com/api/v1/customers/123</a></td></tr></tbody></table>
        <p><em>其中：POST/PUT 与 PATCH的区别在于全部更新，还是局部信息的更新，POST/PUT为该资源的所有字段均被更新或者覆盖。</em></p>
        <h1>RESTful API 设计规范</h1>
        <h2>面向资源设计 URL</h2>
        <h3>面向使用者建模</h3>
        <p>资源不是数据模型， 也不是领域模型，它的语义应该面向使用者。</p>
        <p><strong>反例：</strong></p>
        <pre><code># 面向数据模型设计资源，需要多次请求
        /customers/123
        /customers/123/baseinfo
        /customers/123/tags
        </code></pre>
        <p><strong>正例：</strong></p>
        <pre><code># 面向使用者设计，可以把资源定义为：顾客档案
        /customers_archives/123
        </code></pre>
        <h3>资源与角色相关</h3>
        <p>不同角色的资源可以不同，不同角色使用的资源可以是不一样的，比如：</p>
        <p><strong>管理员访问某个顾客的订单：</strong></p>
        <pre><code>GET /customers/123/podcasts
        </code></pre>
        <p><strong>顾客访问自己的订单：</strong></p>
        <pre><code>GET /my_podcasts
        </code></pre>
        <h3>一类资源两个 URL</h3>
        <p>每个资源都应该只有两个基础 URL（Endpoint），一个 URL 用于集合，另一个用于集合中的某个特定元素。</p>
        <pre><code>/customers      # customer 集合
        /customers/1    # customer 集合中的特定元素
        </code></pre>
        <h3>使用一致的复数名词</h3>
        <p>避免混用复数和单数形式，只应该使用统一的复数名词来表达资源。</p>
        <p><strong>反例：</strong></p>
        <pre><code>GET /story
        GET /story/1
        </code></pre>
        <p><strong>正例：</strong></p>
        <pre><code>GET /stories
        GET /stories/1 
        </code></pre>
        <h3>复杂的查询逻辑使用查询字符串</h3>
        <p>保持URL简单短小，将复杂或可选参数移动到查询字符串。</p>
        <pre><code>GET /customers?country=usa&amp;state=ca&amp;city=sfo
        </code></pre>
        <h3>表达资源之间的关联</h3>
        <p>当需要对关联在资源1下的资源2进行操作时，使用该形式构造URL：</p>
        <p>resources/:resource_id/sub_resources/:sub_resource_id</p>
        <p><strong>反例：</strong></p>
        <pre><code>GET /cusomters/podcasts/123
        GET /getCustomerPodcasts?customer_id=123
        </code></pre>
        <p><strong>正例：</strong></p>
        <pre><code>GET /cusomters/5678/podcasts        # 获取某个客户的所有播客
        GET /cusomters/5678/podcasts/123    # 获取某个客户的某个播客
        POST /cusomters/5678/podcasts       # 为某个客户创建一个新播客
        </code></pre>
        <h2>使用 HTTP Method 表示动作</h2>
        <p>URL 中不应该包含动词，而是全部使用 Method 来表示动作。</p>
        <p><strong>反例：</strong></p>
        <pre><code>GET /getCusomters
        GET /getAllMaleCusomters
        POST /createCusomter
        POST /updateCustomer
        POST /customer/create_for_management/
        </code></pre>
        <p><strong>正例：</strong></p>
        <pre><code>GET /customers                # 获取客户列表
        GET /cusomters?gender=male    # 获取客户列表（过滤出男性）
        GET /customers/5              # 获取ID为5的客户
        POST /cusomters               # 创建新客户             
        PUT /cusomters/5              # 更新已存在的客户5（全量字段）
        PATCH /cusomters/5            # 更新已存在的客户5（部分字段）
        DELETE /cusomters/5           # 删除客户12
        </code></pre>
        <h2>使用 HATEOAS</h2>
        <p>HATEOAS 是 Hypermedia As The Engine Of Application State 的缩写，在 <a href="http://martinfowler.com/articles/richardsonMaturityModel.html">Richardson Maturity Model</a>中，它是 REST 的最高级形态，采用 Hypermedia 的 API 在响应中除了返回资源本身外，还会额外返回一组 Link。 这组 Link 描述了对于该资源，客户端接下来可以做什么以及怎么做，例如：</p>
        <pre><code>{
        
            "tracking_id": "123456",
            "status": "WAIT_PAYMENT",
            "items": [
                {
                    "name": "potato",
                    "quantity": 1
                }
            ],
            "_links": {
                "self": {
                    "href": "http://localhost:57900/orders/123456"
                },
                "cancel": {
                    "href": "http://localhost:57900/orders/123456"
                },
                "payment": {
                    "href": "http://localhost:57900/orders/123456/payments"
                }
            }
        }
        </code></pre>
        <p>使用 HATEOAS 的好处包括但不限于：</p>
        <ol>
        <li>前端不再需要硬编码绝大多数的后端 API URL，而是由后端在响应中返回，后端在对 API 重命名时可以做到前端无感知。</li>
        <li>将一些业务规则统一收敛到后端，比如：有的功能对某个用户的可见性（权限）</li>
        </ol>
        <h2>自定义方法</h2>
        <blockquote>
        <p>结合实践，使用严格的 RESTful 会有一些语义不易表达（或者说表达起来很拧巴），所以在此基础上，并参考：<a href="https://cloud.google.com/apis/design/custom_methods">Google Clould API - 自定义方法</a>，允许使用一些自定义方法来进行表达。这些方法<strong>应该</strong>仅用于标准方法不易表达的功能。通常情况下，<strong>应该</strong>尽可能优先考虑使用标准方法，而不是自定义方法，使用方式如下：</p>
        </blockquote>
        <ul>
        <li>为了在表达上和资源区分开，自定义方法使用动词表示，表示针对资源的自定义动作</li>
        <li>自定义方法统一只使用 GET / POST 这两种 method。</li>
        </ul>
        <pre><code># 一些自定义方法举例
        POST /cusomters/5/cancel
        POST /cusomters/5/undelete
        POST /cusomters/5/search  # 考虑到搜索通常参数比较长，使用GET可能会导致超出长度
        GET /cusomters/batch_get
        </code></pre>
        <h1>API 格式约定</h1>
        <h2>URL 前缀</h2>
        <p>使用如下规则构建 URL：</p>
        <pre><code>https://foo.bar.com/api/ + 业务域 + 版本号 + 资源集合 + 资源ID
        
        例如：https://foo.bar.com/api/mall/v1/customers/1
        </code></pre>
        <h2>Response Body 结构</h2>
        <p>使用相同的 HTTP 响应结构，推荐使用下列结构：</p>
        <pre><code>{
        
          "code": 0,            # 错误码，请求成功时返回0
          "msg": "success",     # 错误信息，请求成功时返回"success"
          "data": {             # 数据内容，结构必须为object，使用 list/string 均不合规范
            "id": 1,
            "name": "abc"
          },
          "extra": {            # 错误码非0时，data应为空，推荐extra字段返回错误时需要携带的信息
          
          }
        }
        </code></pre>
        <h2>版本号</h2>
        <ul>
        <li>当 API 的升级是兼容的时，无需升级版本号。</li>
        <li>版本号使用简单的有序数，而不要使用点号（如：V1.2）。</li>
        <li>在新版本上线时需要保证旧版本API仍然可用，待旧版本不再有请求量时，才能进行下线。</li>
        </ul>
        <h3>URI Path 中的版本号</h3>
        <p>使用在 URI Path 中带版本号，来表示 API 整体的版本，当业务域的 API 发生了重大整体升级时，需要升级该版本号，形如：</p>
        <pre><code>https://foo.bar.com/api/mall/v1
        </code></pre>
        <h2>HTTP 状态码</h2>
        <blockquote>
        <p>使用合适 HTTP Status Code，表达响应的语义</p>
        </blockquote>
        <table><thead><tr><th>HTTP</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>No error.</td></tr><tr><td>400</td><td>Client specified an invalid argument. Check error message and error details for more information. （参数错误）Request can not be executed in the current system state （执行操作不满足接口前置条件）</td></tr><tr><td>401</td><td>Request not authenticated due to missing, invalid, or expired token. （访问身份错误、或者token错误）</td></tr><tr><td>403</td><td>Client does not have sufficient permission. （无权限）</td></tr><tr><td>404</td><td>A specified resource is not found, or the request is rejected by undisclosed reasons, such as whitelisting. （操作的资源不存在）</td></tr><tr><td>405</td><td>The HTTP method in the request is not allowed on the resource. (请求的方法不支持)</td></tr><tr><td>409</td><td>Concurrency conflict, such as read-modify-write conflict. （服务端出现并发冲突、幂等性冲突、读写冲突等等）</td></tr><tr><td>409</td><td>The resource that a client tried to create already exists. （要操作的资源已存在）</td></tr><tr><td>429</td><td>Either out of resource quota or reaching rate limiting. （限流错误）</td></tr><tr><td>500</td><td>Internal server error. Typically a server bug. （内部异常，不可恢复的）</td></tr><tr><td>503</td><td>Service unavailable. Typically the server is down.（服务不可用，可恢复异常，短时间之后可以进行重试并恢复的错误码）</td></tr><tr><td>504</td><td>Request deadline exceeded. This will happen only if the caller sets a deadline that is shorter than the method's default deadline (i.e. requested deadline is not enough for the server to process the request) and the request did not finish within the deadline. （调用超时）</td></tr></tbody></table>
        <h2>错误码</h2>
        <blockquote>
        <p>在使用 HTTP Status Code 的基础上，还需要有业务错误码，通过code字段返回。错误码由各业务方自行约定，业务内部自行划分区段。</p>
        </blockquote>
        <h2>分页</h2>
        <h3>基于 page、page_size 的分页方式</h3>
        <pre><code>curl https://foo.bar.com/api/mall/v1/customers?page=1&amp;page_size=10
        
        {
        
          "code": 0,
          "message": "success",
          "data": {
            "pagination": {
              "total": 3465
            },
            "customers": [
              {
                "id": 123,
                "job_id": 456
              }
            ]
          }
        }
        </code></pre>
        <h3>基于 offset、limit 的分页方式</h3>
        <pre><code>curl https://foo.bar.com/api/mall/v1/customers?offset=20&amp;limit=10
        {
          "code": 0,
          "message": "success",
          "data": {
            "pagination": {
              "total": 3465
            },
            "customers": [
              {
                "id": 123,
                "job_id": 456
              }
            ]
          }
        }
        </code></pre>
        <h3>基于 page_token 的分页方式</h3>
        <pre><code>curl https://foo.bar.com/api/mall/v1/customers?page_token=xxxxxxx&amp;page_size=10
        {
          "code": 0,
          "message": "success",
          "data": {
            "pagination": {
              "page_token": "yyyyyyyyyy",
              "has_more": true
            },
            "customers": [
              {
                "id": 123,
                "job_id": 456
              }
            ]
          }
        }
        </code></pre>
        <h1>API 度量指标</h1>
        <p>API 的实现方，需要密切关注以下基础监控指标，以便于：</p>
        <ol>
        <li>及时发现系统的突发情况，如：接口QPS / 耗时激增，依赖的RPC接口耗时激增等。</li>
        <li>为接口优化提供依据</li>
        </ol>
        <h2>请求量</h2>
        <ul>
        <li>各接口的请求量，可选口径：QPS / 近7天请求量 / 近1天请求量。</li>
        <li><strong>优化方向：在不影响用户体验的前提下，尽可能减少请求量</strong></li>
        </ul>
        <h2>接口耗时</h2>
        <ul>
        <li>各接口的响应耗时，可选口径：latency avg / p50 / p95 / p99</li>
        <li><strong>优化方向：在满足使用者需求的前提下，尽可能少的耗时</strong></li>
        </ul>
        <h2>I/O 扩散量（内部 I/O 访问量 &amp; 耗时 &amp; 错误量）</h2>
        <ul>
        <li><strong>单个接口</strong>的各项 I/O 的QPS &amp; 耗时 &amp; 错误量，如：RPC、Mysql、Redis、Mongo、ES 等，当依赖的基础设施出现问题时，可以快速定位原因。</li>
        <li><strong>优化方向：尽可能减少一次 API 请求中，各项 IO 的 QPS 与耗时。</strong></li>
        </ul>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8b79065cf3f541fb9ccce9e59f07cc93~tplv-k3u1fbpfcp-zoom-1.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h1>API 开发最佳实践</h1>
        <blockquote>
        <p>以下部分对一些场景和功能作给出了具体的规范和要求</p>
        </blockquote>
        <h2>API-First</h2>
        <p>在服务端与客户端开发过程中，提前定义好 API，多方依照契约并行开发。</p>
        <ul>
        <li>在每次需求编码前，就需要提前定义好API，并在接口平台进行登记</li>
        <li>并在后端进行技术方案评审时，需要对 API 接口进行评审</li>
        </ul>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/18e3edda48154564b23da06ee3c541d5~tplv-k3u1fbpfcp-zoom-1.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h2>面向使用者设计</h2>
        <h3><strong>仔细定义“资源”</strong></h3>
        <p>在设计API时，一个重要的前提是对Resource本身进行合理的定义。不应该简单的把服务端内部的存储模型，视为“资源”，而是应该面向使用者，比如：人才详情页也是人才的各种模型的组合，它们应该视为一种（而非多种） 资源。</p>
        <h3>避免琐碎的 API</h3>
        <p>尽量避免公开大量小型资源的“琐碎”Web API，此类 API 可能需要客户端（前端）发送多个请求才能拼装它需要的所有数据。尽可能将相关信息合并成单个较大资源，以便于使用方直接使用。</p>
        <h3>按需返回</h3>
        <p>应当关注使用方所依赖的具体字段，以及字段的使用方式，只返回使用方依赖数据的最小集，确保返回的字段都是对功能有意义的。</p>
        <h2>CQRS</h2>
        <p>CQRS 全称是 Command Query Responsibility Segregation，将应用程序分为两部分：</p>
        <ul>
        <li>命令端(Command)：处理程序创建，更新和删除请求，并在数据更改时发出事件。</li>
        <li>查询端(Query)：通过执行查询来处理查询，并且通过订阅数据更改时发出的事件流而保持最新。</li>
        </ul>
        <p>CQRS 使用分离的接口，将数据查询操作和数据修改操作分离开来，这也意味着在查询和更新过程中使用的数据模型也是不一样的，这样读和写逻辑就隔离开来了。</p>
        <p>相比数据库的读写分离，CQRS 可以理解为是应用层的读写分离，针对读的场景，构建单独的读模型，以提高查询的性能，同时提高系统整体的可维护性。</p>
        <blockquote>
        <p>扩展阅读：</p>
        <p><a href="https://martinfowler.com/bliki/CQRS.html">CQRS - Martin Fowler</a></p>
        <p><a href="https://insights.thoughtworks.cn/backend-development-cqrs/">简单可用的CQRS编码实践</a></p>
        </blockquote>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c2412792ec3f461a878a6a13c3054f42~tplv-k3u1fbpfcp-zoom-1.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h2>兼容性（Compatibility）</h2>
        <p><strong>API 的变更必须保证向后兼容，即 API 的升级不会导致 前端/客户端 的出错。</strong></p>
        <p>即使某次的升级是前后端同时发布，也不要做不兼容的升级，原因如下：</p>
        <ul>
        <li>我们经常并不知道所有的 API 使用方</li>
        <li>发布过程需要时间，无法真正实现“同时发布”</li>
        <li>使发布各环节耦合，一旦前端需要回滚，则后端也要跟着一起回滚，导致上线方案复杂化</li>
        </ul>
        <p>常见的<strong>不兼容</strong>升级如下：</p>
        <ul>
        <li>移除或重命名字段、方法、枚举值</li>
        <li>更改字段类型</li>
        <li>修改字段的行为和语义</li>
        </ul>
        <h2>幂等性（Idempotency）</h2>
        <p><strong>保证 API 的幂等性，能使客户端可以更安全的重试，从而让复杂的流程实现更为简单。</strong></p>
        <h3>Create 类型的幂等</h3>
        <p>创建类型的 API，为了实现幂等性，常见的做法是使用一个 client-side generated deduplication token（客户端生成的唯一ID），在反复重试时使用同一个Token，便于服务端识别重复，如果发现重复，应按创建成功返回。</p>
        <h3>Update 类型的幂等</h3>
        <p>更新类型的 API，通常有唯一ID对需要更新的资源进行标示，以此可以保证幂等。</p>
        <p>对于“Delta”语义的操作，有以下几类方式确保幂等性：</p>
        <ol>
        <li>IncrementBy：基于某个数值增加</li>
        <li>SetNewTotal：设置新的总量</li>
        <li>使用 Deduplication Token 保证幂等</li>
        </ol>
        <p>这几种方式各有优缺点，需要根据场景选择合适的方式。</p>
        <h3>Delete 类型的幂等</h3>
        <p>Delete的幂等性问题，往往在于一个对象被删除后，再次试图删除可能会由于数据无法被发现导致出错。这个行为一般来说也没什么问题，虽然严格意义上不幂等，但是也无副作用。</p>
        <h2>长耗时请求异步化</h2>
        <p>如果某个 API 方法需要很长时间才能完成，可以通过：</p>
        <ol>
        <li>在服务端异步启动任务，并返回 GUID 标示 “长时间运行的操作”资源</li>
        <li>客户端通过定时轮询 <em>/polling/{guid}，</em> 获取任务进行的状态。</li>
        <li>当任务完成/失败时，客户端可以获取到处理的结果/失败原因。</li>
        </ol>
        <h1>附录I：Richardson 成熟度模型</h1>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b5590f2f4cc44e32934cd4361ec3ebb5~tplv-k3u1fbpfcp-zoom-1.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <blockquote>
        <p><a href="https://martinfowler.com/articles/richardsonMaturityModel.html">Richardson Maturity Model - steps toward the glory of REST</a></p>
        <p><a href="https://blog.csdn.net/dm_vincent/article/details/51341037">Richardson成熟度模型(Richardson Maturity Model) - 通往真正REST的步骤</a></p>
        </blockquote></div>`
    },
    "9b19862a-b226-4a56-95d4-5ab4b05024bb": {
        "answer": `<div class="markdown-body"><h2>前言</h2>
        <p>继承这个概念在面向对象编程思想里面十分重要，也是面试必考的考点之一。</p>
        <p>javascript的继承主要是依托其原型与原型链的概念来实现的。</p>
        <blockquote>
        <p>ECMAscript将原型链作为实现继承的主要方法。</p>
        </blockquote>
        <h2>先来看看ES6的实现</h2>
        <p>ES6提供了Class关键字来实现类的定义，Class 可以通过extends关键字实现继承，让子类继承父类的属性和方法。</p>
        <p>咱们重点讲一下ES5的四种常用的实现方式。</p>
        <h2>ES5实现的四种方式</h2>
        <h3>1. 原型链继承</h3>
        <p>原型链继承的原理很简单，直接让子类的原型对象指向父类实例，当子类实例找不到对应的属性和方法时，就会往它的原型对象，也就是父类实例上找，从而实现对父类的属性和方法的继承</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'Back_kk'</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method-variable function-variable method property-access" style="color: rgb(218, 208, 133);">getName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 根据原型链的规则,顺便绑定一下constructor, 这一步不影响继承, 只是在用到constructor时会需要</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 原型的实例等于自身</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">constructor</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token maybe-class-name">Student</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> student </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// Back_kk</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">getName</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// Back_kk</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span>
        </code></div></div></pre>
        <h4>缺陷</h4>
        <ol>
        <li>由于所有Student实例原型都指向同一个Person实例, 因此对某个Student实例的来自父类的引用类型变量修改会影响所有的Student实例</li>
        </ol>
        <p>例如：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">obj</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>        </span><span class="token literal-property" style="color: rgb(150, 203, 254);">name</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'Back_kk'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>        </span><span class="token literal-property" style="color: rgb(150, 203, 254);">age</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">18</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 根据原型链的规则,顺便绑定一下constructor, 这一步不影响继承, 只是在用到constructor时会需要</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 原型的实例等于自身</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">constructor</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token maybe-class-name">Student</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> student1 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>student1</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">obj</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'佩奇'</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> student2 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student2</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">obj</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 佩奇</span></code></div></div></pre>
        <ol start="2">
        <li>在创建子类实例时无法向父类构造传参, 即没有实现super()的功能</li>
        </ol>
        <blockquote>
        <p>那么能不能实现super()功能呢？大家有兴趣可以思考下。</p>
        </blockquote>
        <h3>2. 构造函数继承</h3>
        <p>构造函数继承，即在子类的构造函数中执行父类的构造函数，并为其绑定子类的this，让父类的构造函数把成员属性和方法都挂到子类的this上去，这样既能避免实例之间共享一个原型实例，又能向父类构造方法传参。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> name
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method-variable function-variable method property-access" style="color: rgb(218, 208, 133);">getName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token maybe-class-name">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> arguments</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> student </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'Back_kk'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// Back_kk</span></code></div></div></pre>
        <h4>缺陷</h4>
        <ul>
        <li>
        <p>继承不到父类原型上的属性和方法</p>
        <p>Students类实际上是调用Person类来生成的实例</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/443b5a4914794b93a5976ccab98285dd~tplv-k3u1fbpfcp-watermark.image?"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p>能否交加修改让其获取到Person原型上的属性和方法呢？</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> name
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method-variable function-variable method property-access" style="color: rgb(218, 208, 133);">getName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">// 这里偷偷用了ES6的解构，不影响大局不要在意哈</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>   </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token spread" style="color: rgb(237, 237, 237);">...</span><span>arguments</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> student </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'Back_kk'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// Back_kk</span></code></div></div></pre>
        <p>这是这样顾此失彼，student的构造方法变成了Person,这显然违背了我们的初衷。</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7acb4551fab446c6a131b17c99b12f3b~tplv-k3u1fbpfcp-watermark.image?"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        </li>
        </ul>
        <h3>3. 组合式继承</h3>
        <p>组合是继承结合了原型集成和构造函数继承的特点。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method-variable function-variable method property-access" style="color: rgb(218, 208, 133);">getName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">// 构造函数继承</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token maybe-class-name">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> arguments</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 原型式继承</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 原型的实例等于自身</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">constructor</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token maybe-class-name">Student</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> student </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'Back_kk'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// Back_kk</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">getName</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// Back_kk</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span>
        </code></div></div></pre>
        <h4>缺陷</h4>
        <ul>
        <li>每次创建子类实例都执行了两次构造函数(Person.apply和new Person())，虽然这并不影响对父类的继承，但子类创建实例时，原型中会存在两份相同的属性和方法，这并不优雅。</li>
        </ul>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d7e70a265e7466fb678a8d1f2b4ccd2~tplv-k3u1fbpfcp-watermark.image?"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h3>4. 寄生式组合继承</h3>
        <p>解决构造函数被执行两次的问题, 我们将指向父类实例改为指向父类原型, 减去一次构造函数的执行。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Person</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method-variable function-variable method property-access" style="color: rgb(218, 208, 133);">getName</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">// 构造函数继承</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token maybe-class-name">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> arguments</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 原型式继承</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// Student.prototype = new Person();</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Object</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">create</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Person</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 原型的实例等于自身</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span></span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">prototype</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">constructor</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token maybe-class-name">Student</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> student </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">Student</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'Back_kk'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">name</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// Back_kk</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>student</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">getName</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// Back_kk</span></code></div></div></pre>
        <p>这是目前ES5中比较成熟的继承方式了。</p>
        <h2>总结</h2>
        <ul>
        <li>说到js继承，最开始想到的应该是是原型链继承，通过把子类实例的原型指向父类实例来继承父类的属性和方法，但原型链继承的缺陷在于对子类实例继承的引用类型的修改会影响到所有的实例对象以及无法向父类的构造方法传参。</li>
        <li>构造函数继承, 通过在子类构造函数中调用父类构造函数并传入子类this来获取父类的属性和方法，但构造函数继承也存在缺陷，构造函数继承不能继承到父类原型链上的属性和方法。</li>
        <li>后面有了组合式继承，但也有了新的问题，每次都会执行两次父类的构造方法，最终有了寄生式组合式继承。</li>
        </ul></div>`
    },
    "7fa82090-78a2-4445-a982-48ed95cb20c0": {
        "answer": `
        <div class="markdown-body"><p><div class="ant-image"><img class="ant-image-img" src="https://static.vue-js.com/912f1a10-8787-11eb-85f6-6fac77c0c9b3.png"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h2>一、是什么</h2>
        <p>本质上是优化高频率执行代码的一种手段</p>
        <p>如：浏览器的 <code>resize</code>、<code>scroll</code>、<code>keypress</code>、<code>mousemove</code> 等事件在触发时，会不断地调用绑定在事件上的回调函数，极大地浪费资源，降低前端性能</p>
        <p>为了优化体验，需要对这类事件进行调用次数的限制，对此我们就可以采用<code>throttle</code>（节流）和<code>debounce</code>（防抖）的方式来减少调用频率</p>
        <h4>定义</h4>
        <ul>
        <li>节流: n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效</li>
        <li>防抖: n 秒后在执行该事件，若在 n 秒内被重复触发，则重新计时</li>
        </ul>
        <p>一个经典的比喻:</p>
        <p>想象每天上班大厦底下的电梯。把电梯完成一次运送，类比为一次函数的执行和响应</p>
        <p>假设电梯有两种运行策略 <code>debounce</code> 和 <code>throttle</code>，超时设定为15秒，不考虑容量限制</p>
        <p>电梯第一个人进来后，15秒后准时运送一次，这是节流</p>
        <p>电梯第一个人进来后，等待15秒。如果过程中又有人进来，15秒等待重新计时，直到15秒后开始运送，这是防抖</p>
        <h2>代码实现</h2>
        <h3>节流</h3>
        <p>完成节流可以使用时间戳与定时器的写法</p>
        <p>使用时间戳写法，事件会立即执行，停止触发后没有办法再次执行</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">throttled1</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">fn</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> delay </span><span class="token parameter" style="color: rgb(237, 237, 237);">=</span><span class="token parameter"> </span><span class="token parameter" style="color: rgb(255, 115, 253);">500</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> oldtime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Date</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">now</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter spread" style="color: rgb(237, 237, 237);">...</span><span class="token parameter">args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> newtime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Date</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">now</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>newtime </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> oldtime </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> delay</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>            fn</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token null nil" style="color: rgb(150, 203, 254);">null</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>            oldtime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Date</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">now</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span>
        </code></div></div></pre>
        <p>使用定时器写法，<code>delay</code>毫秒后第一次执行，第二次事件停止触发后依然会再一次执行</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">throttled2</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">fn</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> delay </span><span class="token parameter" style="color: rgb(237, 237, 237);">=</span><span class="token parameter"> </span><span class="token parameter" style="color: rgb(255, 115, 253);">500</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> timer </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token null nil" style="color: rgb(150, 203, 254);">null</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter spread" style="color: rgb(237, 237, 237);">...</span><span class="token parameter">args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(237, 237, 237);">!</span><span>timer</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>            timer </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">setTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>                fn</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>                timer </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token null nil" style="color: rgb(150, 203, 254);">null</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>            </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> delay</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <p>可以将时间戳写法的特性与定时器写法的特性相结合，实现一个更加精确的节流。实现如下</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">throttled</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">fn</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> delay</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> timer </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token null nil" style="color: rgb(150, 203, 254);">null</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> starttime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Date</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">now</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> curTime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Date</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">now</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 当前时间</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> remaining </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> delay </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>curTime </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> starttime</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 从上一次到现在，还剩下多少多余时间</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> context </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> args </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arguments
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>        </span><span class="token" style="color: rgb(218, 208, 133);">clearTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>timer</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>remaining </span><span class="token" style="color: rgb(237, 237, 237);">&lt;=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>            fn</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>context</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>            starttime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Date</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">now</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>            timer </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">setTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>fn</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> remaining</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <h3>防抖</h3>
        <p>简单版本的实现</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">debounce</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">func</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> wait</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> timeout</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> context </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 保存this指向</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> args </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arguments</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 拿到event对象</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>        </span><span class="token" style="color: rgb(218, 208, 133);">clearTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>timeout</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>        timeout </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">setTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>            func</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>context</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> wait</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <p>防抖如果需要立即执行，可加入第三个参数用于判断，实现如下：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">debounce</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">func</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> wait</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> immediate</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> timeout</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> context </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> args </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arguments</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>timeout</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">clearTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>timeout</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// timeout 不为null</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>immediate</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>            </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> callNow </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">!</span><span>timeout</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 第一次会立即执行，以后只有事件执行后才会再次触发</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>            timeout </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">setTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>                timeout </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token null nil" style="color: rgb(150, 203, 254);">null</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>            </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> wait</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>            </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>callNow</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>                func</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>context</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>            </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>            timeout </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">setTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>                func</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>context</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>            </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> wait</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <h2>二、区别</h2>
        <p>相同点：</p>
        <ul>
        <li>都可以通过使用 <code>setTimeout</code> 实现</li>
        <li>目的都是，降低回调执行频率。节省计算资源</li>
        </ul>
        <p>不同点：</p>
        <ul>
        <li>函数防抖，在一段连续操作结束后，处理回调，利用<code>clearTimeout </code>和 <code>setTimeout</code>实现。函数节流，在一段连续操作中，每一段时间只执行一次，频率较高的事件中使用来提高性能</li>
        <li>函数防抖关注一定时间连续触发的事件，只在最后执行一次，而函数节流一段时间内只执行一次</li>
        </ul>
        <p>例如，都设置时间频率为500ms，在2秒时间内，频繁触发函数，节流，每隔 500ms 就执行一次。防抖，则不管调动多少次方法，在2s后，只会执行一次</p>
        <p>如下图所示：</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://static.vue-js.com/a2c81b50-8787-11eb-ab90-d9ae814b240d.png"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h2>三、应用场景</h2>
        <p>防抖在连续的事件，只需触发一次回调的场景有：</p>
        <ul>
        <li>搜索框搜索输入。只需用户最后一次输入完，再发送请求</li>
        <li>手机号、邮箱验证输入检测</li>
        <li>窗口大小<code>resize</code>。只需窗口调整完成后，计算窗口大小。防止重复渲染。</li>
        </ul>
        <p>节流在间隔一段时间执行一次回调的场景有：</p>
        <ul>
        <li>滚动加载，加载更多或滚到底部监听</li>
        <li>搜索框，搜索联想功能</li>
        </ul></div>
        `
    },
    "be6f7f8b-d386-4f99-a0bc-f9b5a0512f99": {
        "answer": `
        <div class="markdown-body"><p>大家知道，==是JavaScript中比较复杂的一个运算符。它的运算规则奇怪，容易让人犯错，从而成为JavaScript中“最糟糕的特性”之一。</p>
        <p>在仔细阅读了ECMAScript规范的基础上，我画了一张图，我想通过它你会彻底地搞清楚关于==的一切。同时，我也试图通过此文向大家证明==并不是那么糟糕的东西，它很容易掌握，甚至看起来很合理。</p>
        <p>先上图：</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://pic3.zhimg.com/80/0ea77966986b068628b17c33419e4476_1440w.png"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p><strong>图1</strong> ==运算规则的图形化表示</p>
        <p>==运算规则的精确描述在此：<a href="https://link.zhihu.com/?target=http%3A//es5.github.io/%23x11.9.3">The Abstract Equality Comparison Algorithm</a>。但是，这么复杂的描述，你确定看完后脑子不晕？确定立马就能拿它指导实践？</p>
        <p>肯定不行，规范毕竟是给JavaScript运行环境的开发人员看的(比如V8引擎的开发人员们)，而不是给语言的使用者看的。而上图正是将规范中复杂的描述翻译成了更容易看懂的形式。</p>
        <p>在详细介绍图1中的每个部分前，我们来复习一下JS中关于类型的知识：</p>
        <ol>
        <li>JS中的值有两种类型：原始类型(Primitive)、对象类型(Object)。</li>
        <li>原始类型包括：Undefined、Null、Boolean、Number和String等五种。</li>
        <li>Undefined类型和Null类型的都只有一个值，即undefined和null；Boolean类型有两个值：true和false；Number类型的值有很多很多；String类型的值理论上有无数个。</li>
        <li>所有对象都有valueOf()和toString()方法，它们继承自Object，当然也可能被子类重写。</li>
        </ol>
        <p>现在考虑表达式：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>x </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> y
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        </code></div></div></pre>
        <p>其中x和y是上述六种类型中某一种类型的值。</p>
        <p>当x和y的类型相同时，x == y可以转化为x === y，而后者是很简单的(唯一需要注意的可能是NaN)，所以下面我们只考虑x和y的类型不同的情况。</p>
        <h2>一. 有和无</h2>
        <p>在图1中，JavaScript值的六种类型用蓝底色的矩形表示。它们首先被分成了两组：</p>
        <ul>
        <li>String、Number、Boolean和Object (对应左侧的大矩形框)</li>
        <li>Undefined和Null (对应右侧的矩形框)</li>
        </ul>
        <p>分组的依据是什么？我们来看一下，右侧的Undefined和Null是用来表示<strong>不确定</strong>、<strong>无</strong>或者<strong>空</strong>的，而右侧的四种类型都是<strong>确定的</strong>、<strong>有</strong>和<strong>非空</strong>。我们可以这样说：</p>
        <blockquote>
        <p>左侧是一个<strong>存在</strong>的世界，右侧是一个<strong>空</strong>的世界。</p>
        </blockquote>
        <p>所以，左右两个世界中的任意值做==比较的结果都是false是很合理的。(见图1中连接两个矩形的水平线上标的false)</p>
        <h2>二. 空和空</h2>
        <p>JavaScript中的undefined和null是另一个经常让我们崩溃的地方。通常它被认为是一个设计缺陷，这一点我们不去深究。不过我曾听说，JavaScript的作者最初是这样想的：</p>
        <blockquote>
        <p>假如你打算把一个变量赋予对象类型的值，但是现在还没有赋值，那么你可以用null表示此时的状态(证据之一就是typeof null 的结果是'object')；相反，假如你打算把一个变量赋予原始类型的值，但是现在还没有赋值，那么你可以用undefined表示此时的状态。</p>
        </blockquote>
        <p>不管这个传闻是否可信，它们两者做==比较的结果是true是很合理的。(见图1中右侧垂直线上标的true)</p>
        <p>在进行下一步之前，我们先来说一下图1中的两个符号：大写字母N和P。这两个符号并不是PN结中正和负的意思。而是：</p>
        <ul>
        <li>N表示ToNumber操作，即将操作数转为数字。它是规范中的抽象操作，但我们可以用JS中的Number()函数来等价替代。</li>
        <li>P表示ToPrimitive操作，即将操作数转为原始类型的值。它也是规范中的抽象操作，同样也可以翻译成等价的JS代码。不过稍微复杂一些，简单说来，对于一个对象obj：</li>
        </ul>
        <blockquote>
        <p>ToPrimitive(obj)等价于：先计算obj.valueOf()，如果结果为原始值，则返回此结果；否则，计算obj.toString()，如果结果是原始值，则返回此结果；否则，抛出异常。</p>
        </blockquote>
        <p>注：此处有个例外，即Date类型的对象，它会先调用toString()方法，后调用valueOf()方法。</p>
        <p>在图1中，标有N或P的线表示：当它连接的两种类型的数据做==运算时，标有N或P的那一边的操作数要先执行ToNumber或ToPrimitive变换。</p>
        <h2>三. 真与假</h2>
        <p>从图1可以看出，当布尔值与其他类型的值作比较时，布尔值会转化为数字，具体来说</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(153, 204, 153);">true</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(153, 204, 153);">false</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span>
        </code></div></div></pre>
        <p>这一点也不需浪费过多口舌。想一下在C语言中，根本没有布尔类型，通常用来表示逻辑真假的正是整数1和0。</p>
        <h2>四. 字符的序列</h2>
        <p>在图1中，我们把String和Number类型分成了一组。为什么呢？在六种类型中，String和Number都是字符的序列(至少在字面上如此)。字符串是所有合法的字符的序列，而数字可以看成是符合特定条件的字符的序列。所以，数字可以看成字符串的一个子集。</p>
        <p>根据图1，在字符串和数字做==运算时，需要使用ToNumber操作，把字符串转化为数字。假设x是字符串，y是数字，那么：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>x </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> y </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Number</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> y
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        </code></div></div></pre>
        <p>那么字符串转化为数字的规则是怎样的呢？规范中描述得很复杂，但是大致说来，就是把字符串两边的空白字符去掉，然后把两边的引号去掉，看它能否组成一个合法的数字。如果是，转化结果就是这个数字；否则，结果是NaN。例如：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Number</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'123'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 结果123</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Number</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'1.2e3'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 结果1200</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Number</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'123abc'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 结果NaN</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Number</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'123\v\f'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 结果123</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span>
        </code></div></div></pre>
        <p>当然也有例外，比如空白字符串转化为数字的结果是0。即</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Number</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">''</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 结果0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Number</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'\v\f'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 结果0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span>
        </code></div></div></pre>
        <h2>五. 单纯与复杂</h2>
        <p>原始类型是一种单纯的类型，它们直接了当、容易理解。然而缺点是表达能力有限，难以扩展，所以就有了对象。对象是属性的集合，而属性本身又可以是对象。所以对象可以被构造得任意复杂，足以表示各种各样的事物。</p>
        <p>但是，有时候事情复杂了也不是好事。比如一篇冗长的论文，并不是每个人都有时间、有耐心或有必要从头到尾读一遍，通常只了解其中心思想就够了。于是论文就有了关键字、概述。JavaScript中的对象也一样，我们需要有一种手段了解它的主要特征，于是对象就有了toString()和valueOf()方法。</p>
        <blockquote>
        <p>toString()方法用来得到对象的一段文字描述；而valueOf()方法用来得到对象的特征值。</p>
        </blockquote>
        <p>当然，这只是我自己的理解。顾名思义，toString()方法倾向于返回一个字符串。那么valueOf()方法呢？根据<a href="https://link.zhihu.com/?target=http%3A//es5.github.io/%23x9.1">规范中的描述</a>，它倾向于返回一个数字——尽管内置类型中，valueOf()方法返回数字的只有Number和Date。</p>
        <p>根据图1，当一个对象与一个非对象比较时，需要将对象转化为原始类型(虽然与布尔类型比较时，需要先将布尔类型变成数字类型，但是接下来还是要将对象类型变成原始类型)。这也是合理的，毕竟==是不严格的相等比较，我们只需要取出对象的主要特征来参与运算，次要特征放在一边就行了。</p>
        <h2>六. 万物皆数</h2>
        <p>我们回过头来看一下图1。里面标有N或P的那几条连线是没有方向的。假如我们在这些线上标上箭头，使得连线从标有N或P的那一端指向另一端，那么会得到(不考虑undefined和null)：</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://pic1.zhimg.com/82bc3a94a0ef897a83a1f9c920702218_b.png"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p><strong>图2</strong> ==运算过程中类型转化的趋势</p>
        <p>发现什么了吗？对，在运算过程中，所有类型的值都有一种向数字类型转化的趋势。毕竟曾经有名言曰：</p>
        <blockquote>
        <p>万物皆数。</p>
        </blockquote>
        <h2>七. 举个栗子</h2>
        <p>前面废话太多了，这里还是举个例子，来证明图1确实是方便有效可以指导实践的。</p>
        <p>例，计算下面表达式的值：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">''</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">false</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        </code></div></div></pre>
        <p>首先，两个操作数分别是对象类型、布尔类型。根据图1，需要将布尔类型转为数字类型，而false转为数字的结果是0，所以表达式变为：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">''</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        </code></div></div></pre>
        <p>两个操作数变成了对象类型、数字类型。根据图1，需要将对象类型转为原始类型：</p>
        <ul>
        <li>首先调用[].valueOf()，由于数组的valueOf()方法返回自身，所以结果不是原始类型，继续调用[].toString()。</li>
        <li>对于数组来说，toString()方法的算法，是将每个元素都转为字符串类型，然后用逗号','依次连接起来，所以最终结果是空字符串''，它是一个原始类型的值。</li>
        </ul>
        <p>此时，表达式变为：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(168, 255, 96);">''</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        </code></div></div></pre>
        <p>两个操作数变成了字符串类型、数字类型。根据图1，需要将字符串类型转为数字类型，前面说了空字符串变成数字是0。于是表达式变为：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        </code></div></div></pre>
        <p>到此为止，两个操作数的类型终于相同了，结果明显是true。</p>
        <p>从这个例子可以看出，要想掌握==运算的规则，除了牢记图1外，还需要记住那些内置对象的toString()和valueOf()方法的规则。包括Object、Array、Date、Number、String、Boolean等，幸好这没有什么难度。</p>
        <h2>八. 再次变形</h2>
        <p>其实，图一还不够完美。为什么呢？因为对象与字符串/数字比较时都由对象来转型，但是与同样是原始类型的布尔类型比较时却需要布尔类型转型。实际上，只要稍稍分析一下，全部让对象来转为原始类型也是等价的。所以我们得到了最终的更加完美的图形：</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://pic2.zhimg.com/0fc2dd69d7f9d4083f347784446b7f0d_b.png"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p><strong>图3</strong> 更完美的==运算规则的图形化表示</p>
        <p>有一个地方可能让你疑惑：为什么Boolean与String之间标了两个N？虽然按照规则应该是由Boolean转为数字，但是下一步String就要转为数字了，所以干脆不如两边同时转成数字。</p>
        <h2>九. 总结一下</h2>
        <p>前面说得很乱，根据我们得到的最终的图3，我们总结一下==运算的规则：</p>
        <ul>
        <li><strong>undefined == null</strong>，结果是<strong>true</strong>。且它俩与所有其他值比较的结果都是<strong>false</strong>。</li>
        <li><strong>String == Boolean</strong>，需要两个操作数同时转为Number。</li>
        <li><strong>String/Boolean == Number</strong>，需要String/Boolean转为Number。</li>
        <li><strong>Object == Primitive</strong>，需要Object转为Primitive(具体通过<strong>valueOf</strong>和<strong>toString</strong>方法)。</li>
        </ul>
        <p>瞧见没有，一共<strong>只有4条规则</strong>！是不是很清晰、很简单。</p>
        <blockquote>
        <p>原答案链接： <a href="https://zhuanlan.zhihu.com/p/21650547">https://zhuanlan.zhihu.com/p/21650547</a></p>
        <p>本答案由《前端面试题宝典》小程序整理和发布，PC端访问地址： <a href="https://fe.ecool.fun/">https://fe.ecool.fun/</a></p>
        </blockquote></div>
        `
    },
    "d3f21598-edfa-48f4-b2d3-d0c19d754b10": {
        "answer": `
        <div class="markdown-body"><p>懒加载是一种网页性能优化的方式，它能极大的提升用户体验。就比如说图片，图片一直是影响网页性能的主要元凶，现在一张图片超过几兆已经是很经常的事了。如果每次进入页面就请求所有的图片资源，那么可能等图片加载出来用户也早就走了。所以，我们需要懒加载，进入页面的时候，只请求可视区域的图片资源。</p>
        <p>总结出来就两个点：</p>
        <ol>
        <li>全部加载的话会影响用户体验</li>
        <li>浪费用户的流量，有些用户并不想全部看完，全部加载会耗费大量流量。</li>
        </ol>
        <h1>实现方式</h1>
        <h2>html 实现</h2>
        <p>最简单的实现方式是给 <code>img</code> 标签加上 <code>loading="lazy"</code>，比如</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-html" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./example.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">loading</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">lazy</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span></code></div></div></pre>
        <p>该属性的兼容性也还行，大家生产环境可以使用。</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://pic.rmb.bdstatic.com/bjh/bc5b155c5016d9979e2da98bcd74730b.png"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h2>js实现原理</h2>
        <p>我们通过js监听页面的滚动也能实现。</p>
        <p>使用js实现的原理主要是判断当前图片是否到了可视区域：</p>
        <ul>
        <li>拿到所有的图片 dom 。</li>
        <li>遍历每个图片判断当前图片是否到了可视区范围内。</li>
        <li>如果到了就设置图片的 src 属性。</li>
        <li>绑定 window 的 scroll 事件，对其进行事件监听。</li>
        </ul>
        <p>在页面初始化的时候，&lt;img&gt;图片的src实际上是放在data-src属性上的，当元素处于可视范围内的时候，就把data-src赋值给src属性，完成图片加载。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-html" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>// 在一开始加载的时候
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">http://xx.com/xx.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span>// 在进入可视范围内时
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">http://xx.com/xx.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">http://xx.com/xx.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span></code></div></div></pre>
        &lt;div&gt;使用背景图来实现，原理也是一样的，把background-image放在，在可视范围时，就把data-src赋值给src属性，完成图片加载。
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-html" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>// 在一开始加载的时候
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">div</span><span class="token" style="color: rgb(150, 203, 254);">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span class="token" style="color: rgb(150, 203, 254);">  </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">http://xx.com/xx.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span class="token" style="color: rgb(150, 203, 254);">  </span><span class="token special-attr" style="color: rgb(168, 255, 96);">style</span><span class="token special-attr attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token special-attr" style="color: rgb(197, 200, 198);">"</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">background-image</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">:</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);"> none</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">;</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">background-size</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">:</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);"> cover</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">;</span><span class="token special-attr" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span class="token" style="color: rgb(150, 203, 254);"></span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span class="token" style="color: rgb(197, 200, 198);">&lt;/</span><span class="token" style="color: rgb(150, 203, 254);">div</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span>// 在进入可视范围内时
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">div</span><span class="token" style="color: rgb(150, 203, 254);">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span class="token" style="color: rgb(150, 203, 254);">  </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">http://xx.com/xx.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span class="token" style="color: rgb(150, 203, 254);">  </span><span class="token special-attr" style="color: rgb(168, 255, 96);">style</span><span class="token special-attr attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token special-attr" style="color: rgb(197, 200, 198);">"</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">background-image</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">:</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);"> </span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">url</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">(</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">http://xx.com/xx.png</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">)</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">;</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">background-size</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">:</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);"> cover</span><span class="token special-attr value css language-css" style="color: rgb(249, 238, 152);">;</span><span class="token special-attr" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span class="token" style="color: rgb(150, 203, 254);"></span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span class="token" style="color: rgb(197, 200, 198);">&lt;/</span><span class="token" style="color: rgb(150, 203, 254);">div</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span></code></div></div></pre>
        <p>下面展示一个demo：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-html" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">html</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">lang</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">en</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">head</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">meta</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">charset</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">UTF-8</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">title</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>Lazyload</span><span class="token" style="color: rgb(197, 200, 198);">&lt;/</span><span class="token" style="color: rgb(150, 203, 254);">title</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">style</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span class="token style language-css">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span class="token style language-css">      </span><span class="token style language-css" style="color: rgb(168, 255, 96);">img</span><span class="token style language-css"> </span><span class="token style language-css" style="color: rgb(197, 200, 198);">{</span><span class="token style language-css">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span class="token style language-css">        </span><span class="token style language-css" style="color: rgb(150, 203, 254);">display</span><span class="token style language-css" style="color: rgb(197, 200, 198);">:</span><span class="token style language-css"> block</span><span class="token style language-css" style="color: rgb(197, 200, 198);">;</span><span class="token style language-css">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span class="token style language-css">        </span><span class="token style language-css" style="color: rgb(150, 203, 254);">margin-bottom</span><span class="token style language-css" style="color: rgb(197, 200, 198);">:</span><span class="token style language-css"> </span><span class="token style language-css" style="color: rgb(255, 115, 253);">50</span><span class="token style language-css unit">px</span><span class="token style language-css" style="color: rgb(197, 200, 198);">;</span><span class="token style language-css">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span class="token style language-css">        </span><span class="token style language-css" style="color: rgb(150, 203, 254);">height</span><span class="token style language-css" style="color: rgb(197, 200, 198);">:</span><span class="token style language-css"> </span><span class="token style language-css" style="color: rgb(255, 115, 253);">200</span><span class="token style language-css unit">px</span><span class="token style language-css" style="color: rgb(197, 200, 198);">;</span><span class="token style language-css">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span class="token style language-css">        </span><span class="token style language-css" style="color: rgb(150, 203, 254);">width</span><span class="token style language-css" style="color: rgb(197, 200, 198);">:</span><span class="token style language-css"> </span><span class="token style language-css" style="color: rgb(255, 115, 253);">400</span><span class="token style language-css unit">px</span><span class="token style language-css" style="color: rgb(197, 200, 198);">;</span><span class="token style language-css">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span class="token style language-css">      </span><span class="token style language-css" style="color: rgb(197, 200, 198);">}</span><span class="token style language-css">
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span class="token style language-css">    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;/</span><span class="token" style="color: rgb(150, 203, 254);">style</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">&lt;/</span><span class="token" style="color: rgb(150, 203, 254);">head</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">body</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/1.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/2.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/3.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/4.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/5.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/6.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/7.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/8.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/9.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">&lt;</span><span class="token" style="color: rgb(150, 203, 254);">img</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/default.png</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(168, 255, 96);">data-src</span><span class="token attr-equals" style="color: rgb(197, 200, 198);">=</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(249, 238, 152);">./img/10.jpg</span><span class="token" style="color: rgb(197, 200, 198);">"</span><span class="token" style="color: rgb(150, 203, 254);"> </span><span class="token" style="color: rgb(197, 200, 198);">/&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">&lt;/</span><span class="token" style="color: rgb(150, 203, 254);">body</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">26</span><span></span><span class="token" style="color: rgb(197, 200, 198);">&lt;/</span><span class="token" style="color: rgb(150, 203, 254);">html</span><span class="token" style="color: rgb(197, 200, 198);">&gt;</span></code></div></div></pre>
        <p>先获取所有图片的 dom，通过 <code>document.body.clientHeight</code> 获取可视区高度，再使用 <code>element.getBoundingClientRect()</code> API 直接得到元素相对浏览的 top 值， 遍历每个图片判断当前图片是否到了可视区范围内。代码如下：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">lazyload</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> viewHeight </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">body</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">clientHeight</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//获取可视区高度</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> imgs </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">querySelectorAll</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'img[data-src]'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  imgs</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">forEach</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">item</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> index</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>item</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">dataset</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">src</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">''</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">// 用于获得页面中某个元素的左，上，右和下分别相对浏览器视窗的位置</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> rect </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> item</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">getBoundingClientRect</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>rect</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">bottom</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&amp;&amp;</span><span> rect</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">top</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> viewHeight</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>      item</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">src</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> item</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">dataset</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">src</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>      item</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">removeAttribute</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'data-src'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <p>最后给 window 绑定 onscroll 事件</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 1.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token dom" style="color: rgb(198, 197, 254);">window</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">addEventListener</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'scroll'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> lazyload</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <p>主要就完成了一个图片懒加载的操作了。但是这样存在较大的性能问题，因为 scroll 事件会在很短的时间内触发很多次，严重影响页面性能，为了提高网页性能，我们需要一个节流函数来控制函数的多次触发，在一段时间内（如 200ms）只执行一次回调。</p>
        <p>下面实现一个节流函数</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">throttle</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">fn</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> delay</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> timer
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> prevTime
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter spread" style="color: rgb(237, 237, 237);">...</span><span class="token parameter">args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> currTime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Date</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">now</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> context </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">this</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(237, 237, 237);">!</span><span>prevTime</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> prevTime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> currTime
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">clearTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>timer</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>currTime </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> prevTime </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> delay</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>      prevTime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> currTime
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>      fn</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>context</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>      </span><span class="token" style="color: rgb(218, 208, 133);">clearTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>timer</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>      </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>    timer </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">setTimeout</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>      prevTime </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Date</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">now</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>      timer </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token null nil" style="color: rgb(150, 203, 254);">null</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>      fn</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">apply</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>context</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> args</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> delay</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <p>然后修改一下 srcoll 事件</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token dom" style="color: rgb(198, 197, 254);">window</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">addEventListener</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'scroll'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">throttle</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>lazyload</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">200</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <h2>拓展： IntersectionObserver</h2>
        <p>通过上面例子的实现，我们要实现懒加载都需要去监听 scroll 事件，尽管我们可以通过函数节流的方式来阻止高频率的执行函数，但是我们还是需要去计算 scrollTop，offsetHeight 等属性，有没有简单的不需要计算这些属性的方式呢，答案就是 <code>IntersectionObserver</code>。</p>
        <p><code>IntersectionObserver</code> 是一个比较新的 API，可以自动"观察"元素是否可见，Chrome 51+ 已经支持。由于可见（visible）的本质是，目标元素与视口产生一个交叉区，所以这个 API 叫做"交叉观察器"。我们来看一下它的用法：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> io </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">IntersectionObserver</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>callback</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> option</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 开始观察</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>io</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">observe</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">getElementById</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'example'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 停止观察</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>io</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">unobserve</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>element</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 关闭观察器</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>io</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">disconnect</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span>
        </code></div></div></pre>
        <p>IntersectionObserver 是浏览器原生提供的构造函数，接受两个参数：callback 是可见性变化时的回调函数，option 是配置对象（该参数可选）。</p>
        <p>目标元素的可见性变化时，就会调用观察器的回调函数 callback。callback 一般会触发两次。一次是目标元素刚刚进入视口（开始可见），另一次是完全离开视口（开始不可见）。</p>
        <p>下面我们用 IntersectionObserver 实现图片懒加载</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> imgs </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">querySelectorAll</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'img[data-src]'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> config </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token literal-property" style="color: rgb(150, 203, 254);">rootMargin</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'0px'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token literal-property" style="color: rgb(150, 203, 254);">threshold</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> observer </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">IntersectionObserver</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">entries</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> self</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>  entries</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">forEach</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">entry</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>entry</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">isIntersecting</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>      </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> img </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> entry</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">target</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>      </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> src </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> img</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">dataset</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">src</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>      </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>src</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>        img</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">src</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> src
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>        img</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">removeAttribute</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'data-src'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>      </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>      </span><span class="token" style="color: rgb(124, 124, 124);">// 解除观察</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>      self</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">unobserve</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>entry</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">target</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> config</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>imgs</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">forEach</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">image</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>  observer</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">observe</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>image</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span>
        </code></div></div></pre></div>
        `
    },
    "2f8aa80e-e3b0-4d10-843d-83e947dda744": {
        "answer": `
        <div class="markdown-body"><p>Source map 想必大家都不陌生。线上的代码多是压缩后的，如果线上有报错却只能调试那个代码多半是个噩梦。因此我们需要有一个桥梁帮助我们搭建起源代码及压缩后代码的联系，source map 就是起了这个作用。</p>
        <p>以下是 MDN 对于 source map 的解释：</p>
        <blockquote>
        <p>调试原始源代码会比浏览器下载的转换后的代码更加容易。 <a href="https://www.html5rocks.com/en/tutorials/developertools/sourcemaps/">source map</a> 是从已转换的代码映射到原始源的文件，使浏览器能够重构原始源并在调试器中显示重建的原始源。</p>
        </blockquote>
        <p>但是不知道大家有没有对 source map 的原理产生过疑问？先列出了四个疑问，不知道各位是不是也存在过这样的问题：</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7221a39259a648ac9135c6db1889bdef~tplv-k3u1fbpfcp-zoom-1.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p>接下来的内容会逐步为读者解答这四问。</p>
        <h2>source map 文件是否影响网页性能</h2>
        <p>这个答案肯定是不会影响，否则构建相关的优化就肯定会涉及到对于 source map 的处理了，毕竟 source map 文件也不小。</p>
        <p>其实 source map 只有在打开 dev tools 的情况下才会开始下载，相信大部分用户都不会去打开这个面板，所以这也就不是问题了。</p>
        <p>这时可能会有读者想说：哎，但是我好像从来没有在 Network 里看到 source map 文件的加载呀？其实这只是浏览器隐藏了而已，如果大家使用抓包工具的话就能发现在打开 dev tools 的时候开始下载 source map 了。</p>
        <h2>source map 存在标准嘛？</h2>
        <p>source map 是存在一个标准的，为 Google 及 Mozilla 的工程师制定，<a href="https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit">文档地址</a>。正是因为存在这份标准，各个打包器及浏览器才能生成及使用 source map，否则就乱套了。</p>
        <p>各个打包器基本都基于<a href="https://github.com/mozilla/source-map">该库</a>来生成 source map，当然也存在一些魔改的方案，但是标准都是统一的。</p>
        <p>通过上面的库生成出来的 source map 格式大致如下，大家也可以对比各个打包器的产物，格式及内容大部分都是一致的：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-json" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  version</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">3</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  file</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"min.js"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  names</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"bar"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"baz"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"n"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>  sources</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"one.js"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"two.js"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>  sourceRoot</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"http://example.com/www/js/"</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>  mappings</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">"CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA"</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <p>接下来介绍下重要字段的作用：</p>
        <ul>
        <li>version：顾名思义，指代了版本号，目前 source map 标准的版本为 3，也就是说这份 source map 使用的是第三版标准产出的</li>
        <li>file：编译后的文件名</li>
        <li>names：一个优化用的字段，后续会在 mappings 中用到</li>
        <li>sources：多个源文件名</li>
        <li>mappings：这是最重要的内容，表示了源代码及编译后代码的关系，但是先略过这块，下文中会详细解释</li>
        </ul>
        <p>另外大部分应用都是由 webpack 来打包的，可能有些读者会发现 webpack 的 source map   产出的字段于上面的略微有些不一致。</p>
        <p>这是因为 webpack 魔改了一些东西，但是底下还是基于这个库实现的，只是变动了一些不涉及核心的字段，<a href="https://github.com/webpack/webpack-sources/blob/master/lib/SourceMapSource.js">具体代码</a>。</p>
        <h2>浏览器怎么知道源文件和 source map 的关系？</h2>
        <p>这里我们以 webpack 做个实验，通过 webpack5 对于以下代码进行打包：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">// index.js</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> a </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span></code></div></div></pre>
        <p>当我们开启 source map 选项以后，产物应该为两个文件，分别为 <code>bundle.js</code> 以及 <code>bundle.js.map</code>。</p>
        <p>查看 <code>bundle.js</code> 文件以后我们会发现代码中存在这一一段注释：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(124, 124, 124);">//# sourceMappingURL=bundle.js.map</span></code></div></div></pre>
        <p><code>sourceMappingURL</code> 就是标记了该文件的 source map 地址。</p>
        <p>当然除此之外还有别的方式，通过查阅 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/SourceMap">MDN 文档</a> 发现还可以通过 response header 的 <code>SourceMap: &lt;url&gt;</code> 字段来表明。</p>
        <h2>source map 是如何对应到源代码的？</h2>
        <p>这是 source map 最核心的功能，也是最涉及知识盲区的一块内容。</p>
        <p>大家应该还记得上文中没介绍的 <code>mapping</code> 字段吧，接下来我们就来详细了解这个字段的用处。</p>
        <p>我们还是以刚才打包的文件为例，来看看产出的 source map 长啥样（去掉了无关紧要的）：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-json" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>  sources</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">"webpack://webpack-source-demo/./src/index.js"</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  names</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>'console'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> 'log'</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  mappings</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> 'AACAA</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>QAAQC</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>IADE'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <p>首先 <code>mappings</code> 的内容其实是 Base64 VLQ 的编码表示。</p>
        <p>内容由三部分组成，分别为：</p>
        <ul>
        <li>英文，表示源码及压缩代码的位置关联</li>
        <li>逗号，分隔一行代码中的内容。比如说 <code>console.log(a)</code> 就由 <code>console</code> 、<code>log</code> 及 <code>a</code> 三部分组成，所以存在两个逗号。</li>
        <li>分号，代表换行</li>
        </ul>
        <p>逗号和分号想必大家没啥疑问，但是对于这几个英文内容应该会很困惑。</p>
        <p>其实这就是一种压缩数字内容的编码方式，毕竟源代码可能很庞大，用数字表示行数及列数的话 source map 文件将也会很庞大，因此选用 Base 64 来代表数字用以减少文件体积。</p>
        <p>比如说 <code>A</code> 代表了数字 0，<code>C</code> 代表了数字 2 等等，有兴趣的读者可以通过<a href="https://www.murzwin.com/base64vlq.html">该网站</a>了解映射关系。</p>
        <p>了解了这层编码的映射关系，我们再来聊聊这一串串英文到底代表了什么。</p>
        <p>其实这每串英文中的字母都代表了一个位置：</p>
        <ol>
        <li>压缩代码的第几列</li>
        <li>哪个源代码文件，毕竟可以多个文件打包成一个，对应 <code>sources</code> 字段</li>
        <li>源代码第几行</li>
        <li>源代码第几列</li>
        <li><code>names</code> 字段里的索引</li>
        </ol>
        <p>这时读者可能有个疑惑，为啥没有压缩代码的第几行表示？这是因为压缩后的代码就一行，所以只需要表示第几列就行了。</p>
        <hr>
        <p><strong>更新：有读者询问 Base64 表达的数字是有上限的，如果需要表示的数字很大的话该怎么办。实际上除了每个分号中的第一串英文是用来表示代码的第几行第几列的绝对位置之外，后面的都是相对于之前的位置来做加减法的。</strong></p>
        <hr>
        <p>了解完以上知识以后，我们就来根据上文的内容解析下 <code>AACAA</code> 的具体含义吧，通过<a href="https://www.murzwin.com/base64vlq.html">该网站</a>我们可以知道 <code>AACAA</code> 对应了 <code>[0,0,1,0,0]</code>，这里需要注意的是数字都从 0 开始，笔者表述的时候会自动加一，毕竟代码第零行听起来怪怪的。</p>
        <ol>
        <li>压缩代码的第一列</li>
        <li>第一个源代码文件，也就是 <code>index.js</code> 文件了</li>
        <li>源代码第二行了</li>
        <li>源代码的第一列</li>
        <li><code>names</code> 数组中的第一个索引，也就是 <code>console</code></li>
        </ol>
        <p>通过以上的解析，我们就能知道 <code>console</code> 在源代码及压缩文件中的具体位置了。</p>
        <p>但是为什么 source map 会知道编译后的代码具体在什么位置呢？这里就要用到 AST 了。让我们打开<a href="https://astexplorer.net/">网站</a>输入 <code>console.log(a)</code> 后观察右边的内容，你应该会发现如图所示的数据：</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d7f590b8c7b149369f0641fd12bb196d~tplv-k3u1fbpfcp-zoom-1.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p>因为 source map 是由 AST 产出的，所以我们能用上 AST 中的这个数据。</p>
        <h2>source map 的应用</h2>
        <p>一般来说 source map 的应用都是在监控系统中，开发者构建完应用后，通过插件将源代码及 source map 上传至平台中。一旦客户端上报错误后，我们就可以通过<a href="https://github.com/mozilla/source-map">该库</a>来还原源代码的报错位置（具体 API 看文档即可），方便开发者快速定位线上问题。</p></div>
        `
    },
    "4a29429d-d77e-46be-a4fd-099ba208c52f": {
        "answer": `
        <div class="markdown-body"><p>二分查找，也称为折半查找，是指在有序的数组里找出指定的值，返回该值在数组中的索引。</p>
        <p>查找步骤如下：</p>
        <ol>
        <li>从有序数组的最中间元素开始查找，如果该元素正好是指定查找的值，则查找过程结束。否则进行下一步;</li>
        <li>如果指定要查找的元素大于或者小于中间元素，则在数组大于或小于中间元素的那一半区域查找，然后重复第一步的操作;</li>
        <li>重复以上过程，直到找到目标元素的索引，查找成功;或者直到子数组为空，查找失败。</li>
        </ol>
        <p>优点是比较次数少，查找速度快，平均性能好；
        其缺点是要求待查表为<strong>有序表</strong>，且插入删除困难。因此，折半查找方法适用于不经常变动而查找频繁的有序列表。</p>
        <h2>实现方式</h2>
        <h3>非递归</h3>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">//arr:数组;key:查找的元素</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">search</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">arr</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> key</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//初始索引开始位置和结束位置</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> start </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>        end </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">while</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>start </span><span class="token" style="color: rgb(237, 237, 237);">&lt;=</span><span> end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>        </span><span class="token" style="color: rgb(124, 124, 124);">//取上限和下限中间的索引</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> mid </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">parseInt</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>end </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> start</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">/</span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>key </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>mid</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>            </span><span class="token" style="color: rgb(124, 124, 124);">//如果找到则直接返回</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>            </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> mid</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>key </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>mid</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>            </span><span class="token" style="color: rgb(124, 124, 124);">//如果key是大于数组中间索引的值则将索引开始位置设置为中间索引+1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>            start </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> mid </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>            </span><span class="token" style="color: rgb(124, 124, 124);">//如果key是小于数组中间索引的值则将索引结束位置设置为中间索引-1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>            end </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> mid </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//如果在循环内没有找到查找的key(start&lt;=end)的情况则返回-1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span></span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> arr </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">13</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">21</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">35</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">46</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">52</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">68</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">77</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">89</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">94</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span></span><span class="token" style="color: rgb(218, 208, 133);">search</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">68</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//6</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span></span><span class="token" style="color: rgb(218, 208, 133);">search</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//-1</span></code></div></div></pre>
        <h3>递归</h3>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">//arr:数组;key:查找的元素;start:开始索引;end:结束索引</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">search2</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">arr</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter">key</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter">start</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter">end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//首先判断当前起始索引是否大于结束索引,如果大于说明没有找到元素返回-1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>start </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//如果手动调用不写start和end参数会当做第一次运行默认值</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//三元表达式:如果不写end参数则为undefined说明第一次调用所以结束索引为arr.length-1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//如果是递归调用则使用传进来的参数end值</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> end</span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> end</span><span class="token" style="color: rgb(237, 237, 237);">===</span><span class="token nil" style="color: rgb(150, 203, 254);">undefined</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">?</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> end</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//如果 || 前面的为真则赋值start,如果为假则赋值后面的0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//所以end变量没有写var end = end || arr.length-1;这样如果递归调用时候传参end为0时会被转化为false,导致赋值给arr.length-1造成无限循环溢出;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> start</span><span class="token" style="color: rgb(237, 237, 237);">=</span><span>start </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">//取中间的索引</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> mid</span><span class="token" style="color: rgb(237, 237, 237);">=</span><span class="token" style="color: rgb(218, 208, 133);">parseInt</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>start</span><span class="token" style="color: rgb(237, 237, 237);">+</span><span>end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(237, 237, 237);">/</span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>key</span><span class="token" style="color: rgb(237, 237, 237);">==</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>mid</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>        </span><span class="token" style="color: rgb(124, 124, 124);">//如果找到则直接返回</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> mid</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>key</span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>mid</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>        </span><span class="token" style="color: rgb(124, 124, 124);">//如果key小于则递归调用自身,将结束索引设置为中间索引-1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">search2</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>key</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>start</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>mid</span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>        </span><span class="token" style="color: rgb(124, 124, 124);">//如果key大于则递归调用自身,将起始索引设置为中间索引+1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">search2</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>key</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>mid</span><span class="token" style="color: rgb(237, 237, 237);">+</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span>end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">26</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">27</span><span></span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> arr </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">13</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">21</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">35</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">46</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">52</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">68</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">77</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">89</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(255, 115, 253);">94</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">28</span><span></span><span class="token" style="color: rgb(218, 208, 133);">search2</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">77</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//7</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">29</span><span></span><span class="token" style="color: rgb(218, 208, 133);">search2</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">99</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//-1</span></code></div></div></pre></div>
        `
    },
    "4b1c17f5-a42b-4853-9ff5-792a23d45050": {
        "answer": `
        <div class="markdown-body"><h2>概要</h2>
        <p>下面将通过以下几个方面对AST进行介绍</p>
        <ol>
        <li>为什么要了解AST，简要说明AST在开发中的重要性</li>
        <li>什么是AST，对AST有一个直观的认识</li>
        <li>AST是如何生成的，分析将代码解析成AST的原理</li>
        <li>AST的具体应用，通过解读babel原理、vue模板编译过程，Prettier实现原理，来分析AST在开发中的具体使用。</li>
        <li>AST还能做什么，结合工作，思考AST能为我们做些什么</li>
        </ol>
        <h2>为什么要学习AST</h2>
        <p>AST（抽象语法树）在开发过程中扮演一个非常重要的角色，但是我们却很少去直接接触它。</p>
        <p>无论是代码编译（babel），打包（webpack），代码压缩，css预处理，代码校验（eslint），代码美化（pretiier），Vue中对template的编译，这些的实现都离不开AST。</p>
        <p>了解学习AST，能够帮助我们更好的对上面说的这些工具原理进行理解，同时，我们可以利用它去开发一些工具，来优化我们的开发流程，提高开发效率。</p>
        <h2>什么是AST</h2>
        <p>AST是对源代码的抽象语法结构的树状表现形式。</p>
        <p>在不同的场景下，会有不同的解析器将源码解析成抽象语法树。</p>
        <p>下面直观的看一下AST是什么样的</p>
        <p>代码</p>
        <pre><code>let answer = 2 * 3;
        
        </code></pre>
        <p>对应的AST语法树</p>
        <pre><code>{
            "type": "Program",
            "body": [
                {
                    "type": "VariableDeclaration",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "Identifier",
                                "name": "answer"
                            },
                            "init": {
                                "type": "BinaryExpression",
                                "operator": "*",
                                "left": {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "2"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": 3,
                                    "raw": "3"
                                }
                            }
                        }
                    ],
                    "kind": "let"
                }
            ],
            "sourceType": "script"
        }
        
        </code></pre>
        <p>那么AST是如何生成的呢？</p>
        <h2>AST是如何生成的</h2>
        <p>AST是通过JS Parser （解析器），将js源码转化为抽象语法树，主要分为两步</p>
        <h3>1. 分词</h3>
        <p>将整个的代码字符串，分割成语法单元数组（token）。 JS中的语法单元（token）指标识符（function，return），运算符，括号，数字，字符串等能解析的最小单元。主要有以下几种：</p>
        <ol>
        <li>标识符<br>
        没有被引号括起来的连续字符，可以包含字母、数字、_、$，其中数字不能作为开头。<br>
        标识符可能是var，return，function等关键字，也可能是true，false这样的内置常量，或是一个变量。具体是哪种语义，分词阶段不区分，只要正确拆分即可。</li>
        <li>数字 十六进制，十进制，八进制以及科学表达式等都是最小单元</li>
        <li>运算符： +、-、 *、/ 等</li>
        <li>字符串 对计算机而言，字符串只会参与计算和展示，具体里面细分没必要分析</li>
        <li>注释 不管是行注释还是块注释，对于计算机来说并不关心其内容，所以可以作为不可再拆分的最小单元</li>
        <li>空格 连续的空格，换行，缩进等，只要不在字符串中都没有实际的逻辑意义，所以连续的空格可以作为一个语法单元。</li>
        <li>其他，大括号，中括号，小括号，冒号 等等。</li>
        </ol>
        <p>依然拿上面的代码作为例子，分词后生成的语法单元数组如下</p>
        <pre><code>[
            {
                "type": "Keyword",
                "value": "var",
                "range": [
                    0,
                    3
                ]
            },
            {
                "type": "Identifier",
                "value": "answer",
                "range": [
                    4,
                    10
                ]
            },
            {
                "type": "Punctuator",
                "value": "=",
                "range": [
                    11,
                    12
                ]
            },
            {
                "type": "Numeric",
                "value": "2",
                "range": [
                    13,
                    14
                ]
            },
            {
                "type": "Punctuator",
                "value": "*",
                "range": [
                    15,
                    16
                ]
            },
            {
                "type": "Numeric",
                "value": "3",
                "range": [
                    17,
                    18
                ]
            },
            {
                "type": "Punctuator",
                "value": ";",
                "range": [
                    18,
                    19
                ]
            }
        ]
        
        </code></pre>
        <h3>2. 语义分析</h3>
        <p>语义分析的目的是将分词得到的语法单元进行一个整体的组合，分析确定语法单元之间的关系。</p>
        <p>简单来说，语义分析可以理解成对语句（statement）和表达式（expression）的识别。</p>
        <ol>
        <li>语句，一个具备边界的代码区域。相邻的两个语句之间从语法上讲互不影响。比如： <code>var a = 1; if(xxx){xxx}</code></li>
        <li>表达式，指最终会有一个结果的一小段代码，它可以嵌入到另一个表达式中，且包含在表达式中。比如：<code>a++</code>， <code>i &gt; 0 &amp;&amp; i&lt; 6</code></li>
        </ol>
        <p>语义分析是一个递归的过程，它会将分词分析出来的数组转化成树形的表达形式。同时，会验证语法，语法如果存在错误的话，会抛出语法错误。</p>
        <h2>AST的具体应用</h2>
        <p>文章一开始就说到了，babel，webpack，css预处理，eslint等都应用到了AST树，那么AST到底做了一个什么样的角色呢！？ 下面我们就来看一下。</p>
        <p>首先看一下babel工作原理的实现。</p>
        <h3>babel实现原理</h3>
        <p>babel是一个javascript编译器，用来将es6语法编译成es5</p>
        <p>babel的工作可以分为3个阶段：</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/12/16efabb5dd074189~tplv-t2oaga2asx-image.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p>第1步 解析（Parse）<br>
        通过解析器babylon将代码解析成抽象语法树</p>
        <p>第2步 转换（TransForm）<br>
        通过babel-traverse plugin对抽象语法树进行深度优先遍历，遇到需要转换的，就直接在AST对象上对节点进行添加、更新及移除操作，比如遇到箭头函数，就转换成普通函数，最后得到新的AST树。</p>
        <p>第3步 生成（Generate）<br>
        通过babel-generator将AST树生成es5代码</p>
        <h3>vue模板编译过程</h3>
        <p>Vue 提供了 2 个版本，一个是 Runtime + Compiler ，另一个是 Runtime only 的，前者是包含编译代码的，会把编译的过程放在运行时做，后者是不包含编译代码的，需要借助 webpack 的vue-loader把模板编译render函数。不管使用哪个版本，都有一个环节，就是将模板编译成render函数。</p>
        <p>下面我们分析下vue模板的编译过程，这也是vue源码实现中非常重要的一个模块。 vue模板的编译过程分为3个阶段</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/12/16efabbb717ce350~tplv-t2oaga2asx-image.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p>第1步 解析（Parse）</p>
        <pre><code>const ast = parse(template.trim(), options)
        
        </code></pre>
        <p>将模板字符串解析生成 AST,这里的解析器是vue自己实现的，解析过程中会使用正则表达式对模板顺序解析，当解析到开始标签、闭合标签、文本的时候都会有相对应的回调函数执行，来达到构造 AST 树的目的。</p>
        <p>生成的AST 元素节点总共有 3 种类型，1 为普通元素， 2 为表达式，3为纯文本。下面看一个例子</p>
        <pre><code>&lt;ul :class="bindCls" class="list" v-if="isShow"&gt;
            &lt;li v-for="(item,index) in data" @click="clickItem(index)"&gt;{{item}}:{{index}}&lt;/li&gt;
        &lt;/ul&gt;
        
        </code></pre>
        <p>上面模板解析生成的AST树如下：</p>
        <pre><code>ast = {
          'type': 1,
          'tag': 'ul',
          'attrsList': [],
          'attrsMap': {
            ':class': 'bindCls',
            'class': 'list',
            'v-if': 'isShow'
          },
          'if': 'isShow',
          'ifConditions': [{
            'exp': 'isShow',
            'block': // ul ast element
          }],
          'parent': undefined,
          'plain': false,
          'staticClass': 'list',
          'classBinding': 'bindCls',
          'children': [{
            'type': 1,
            'tag': 'li',
            'attrsList': [{
              'name': '@click',
              'value': 'clickItem(index)'
            }],
            'attrsMap': {
              '@click': 'clickItem(index)',
              'v-for': '(item,index) in data'
             },
            'parent': // ul ast element
            'plain': false,
            'events': {
              'click': {
                'value': 'clickItem(index)'
              }
            },
            'hasBindings': true,
            'for': 'data',
            'alias': 'item',
            'iterator1': 'index',
            'children': [
              'type': 2,
              'expression': '_s(item)+":"+_s(index)'
              'text': '{{item}}:{{index}}',
              'tokens': [
                {'@binding':'item'},
                ':',
                {'@binding':'index'}
              ]
            ]
          }]
        }
        
        </code></pre>
        <p>第2步 优化语法树（Optimize）</p>
        <pre><code>optimize(ast, options)
        
        </code></pre>
        <p>vue模板中并不是所有数据都是响应式的，有很多数据是首次渲染后就永远不会变化的，那么这部分数据生成的 DOM 也不会变化，我们可以在patch的过程跳过对他们的比对。<br>
        此阶段会深度遍历生成的 AST树，检测它的每一颗子树是不是静态节点，如果是静态节点则它们生成 DOM 永远不需要改变，这对运行时对模板的更新起到极大的优化作用。</p>
        <p>遍历过程中，会对整个 AST 树中的每一个 AST 元素节点标记static和staticRoot（递归该节点的所有children，一旦子节点有不是static的情况，则为false，否则为true）。</p>
        <p>经过该阶段，上面例子中的ast会变成</p>
        <pre><code>ast = {
          'type': 1,
          'tag': 'ul',
          'attrsList': [],
          'attrsMap': {
            ':class': 'bindCls',
            'class': 'list',
            'v-if': 'isShow'
          },
          'if': 'isShow',
          'ifConditions': [{
            'exp': 'isShow',
            'block': // ul ast element
          }],
          'parent': undefined,
          'plain': false,
          'staticClass': 'list',
          'classBinding': 'bindCls',
          'static': false,
          'staticRoot': false,
          'children': [{
            'type': 1,
            'tag': 'li',
            'attrsList': [{
              'name': '@click',
              'value': 'clickItem(index)'
            }],
            'attrsMap': {
              '@click': 'clickItem(index)',
              'v-for': '(item,index) in data'
             },
            'parent': // ul ast element
            'plain': false,
            'events': {
              'click': {
                'value': 'clickItem(index)'
              }
            },
            'hasBindings': true,
            'for': 'data',
            'alias': 'item',
            'iterator1': 'index',
            'static': false,
            'staticRoot': false,
            'children': [
              'type': 2,
              'expression': '_s(item)+":"+_s(index)'
              'text': '{{item}}:{{index}}',
              'tokens': [
                {'@binding':'item'},
                ':',
                {'@binding':'index'}
              ],
              'static': false
            ]
          }]
        }
        
        </code></pre>
        <p>第3步 生成代码</p>
        <pre><code>const code = generate(ast, options)
        
        </code></pre>
        <p>通过generate方法，将ast生成render函数</p>
        <pre><code>with(this){
          return (isShow) ?
            _c('ul', {
                staticClass: "list",
                class: bindCls
              },
              _l((data), function(item, index) {
                return _c('li', {
                  on: {
                    "click": function($event) {
                      clickItem(index)
                    }
                  }
                },
                [_v(_s(item) + ":" + _s(index))])
              })
            ) : _e()
        }
        
        </code></pre>
        <h3>Prettier实现原理</h3>
        <p>通过上面对babel实现原理和vue模板的编译原理可以看出，他们的实现有很多相同之处，都是先将源码解析成AST树，然后对AST树就行处理，最后生成想要的东西。</p>
        <p>Prettier的实现同样是这样，首先依然是将代码解析生成AST树，然后是对AST遍历，调整长句，整理空格，括号等，最后输出代码，这里就不赘述了。</p>
        <h3>小结</h3>
        <p>我们分析了Babel原理、vue模板编译过程、Prettier原理，这里我们简单总结一下。<br>
        如果把源码比作一个机器，那么分词过程就是将这台机器拆分成一个个零件，语义分析过程就是分析每个零件的位置以及作用，然后根据需要对零件进行加工处理，最后再组装成一个新的机器。</p>
        <h2>AST还能做什么</h2>
        <p>那么工作中我们能使用AST做些什么呢？！</p>
        <p>这里就要发挥想象了，看看我们日常工作中有什么需求是可以通过AST开发个工具来解决。<br>
        比如，可以通过AST可以将代码自动转成流程图；<br>
        或者根据自定义的注释规范，通过工具自动生成文档；<br>
        或是通过工具自动生成骨架屏文件。</p></div>
        `
    },
    "3c003aad-68a0-4abf-8fbc-62e37b4f3b10": {
        "answer": `
        <div class="markdown-body"><blockquote>
        <p>flexible.js 官方已不再维护，目前推行 vw 适配方案，本答案只是为了分析它的原理。</p>
        </blockquote>
        <p>flexible.js存在的目的，是为了让网页在各终端上的展示效果就像缩放设计稿图片一样，在不同屏幕上等比缩放，每一个元素与整体比例保持不变，真实还原设计稿。</p>
        <h1>基本原理</h1>
        <p>设页面宽度为P（单位px）</p>
        <p>设计稿宽度为750px</p>
        <p>设html基准值为X（单位px）</p>
        <hr>
        <p>首先将页面分为100份，份的单位为F</p>
        <p>设1F的像素值为A（单位px/F）</p>
        <p>那么：</p>
        <p>P = 100F * A</p>
        <p>A = P/100F</p>
        <p>当P为750时，A=7.5px/F，即一份为7.5px</p>
        <p>有没有感觉这个A有点熟悉，没错它就是X，上面份的单位F其实就是rem。</p>
        <p>（html font-size的基准值单位虽然写为px，但其实是px/F，这点你知道就可以了）</p>
        <p>现在懂了吧。</p>
        <p>rem的原理就是份，我们根据设计稿得到元素的份，写到代码中的也是份，现在只要动态改变html的基准值，就能够在不同屏幕下适配，从而还原设计稿尺寸了。</p>
        <p>所以flexible.js的原理主要是：</p>
        <p>window.onresize = function() {
        html.size = P/100 + 'px'
        }</p>
        <p>当然针对高清屏，它还会设置“viewport scale”，以缩放页面，解决类似高清屏下无法实现1px边框等问题。</p>
        <p>需要注意的是，基准值其实是个动态值，只是在写代码时，我们是按照设计稿宽度计算的基准值写的rem，即以设计稿为标准进行屏幕适配的（将设计稿用代码还原成UI界面），但在实际运行时，页面宽度是动态的，所以基准值也是动态的哦。</p>
        <h1>源码解析</h1>
        <p>flexible.js 的源码并不多，总共不到 50 行：</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">// 首先是一个立即执行函数，执行时传入的参数是window和document</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">flexible</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter dom" style="color: rgb(198, 197, 254);">window</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> </span><span class="token parameter dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> docEl </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">documentElement</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 返回文档的root元素</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> dpr </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token dom" style="color: rgb(198, 197, 254);">window</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">devicePixelRatio</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">||</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span> 
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 获取设备的dpr，即当前设置下物理像素与虚拟像素的比值</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 调整body标签的fontSize，fontSize = (12 * dpr) + 'px'</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 设置默认字体大小，默认的字体大小继承自body</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">setBodyFontSize</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">body</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>      </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">body</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">style</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">fontSize</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(255, 115, 253);">12</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">*</span><span> dpr</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'px'</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>      </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">addEventListener</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'DOMContentLoaded'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> setBodyFontSize</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>  </span><span class="token" style="color: rgb(218, 208, 133);">setBodyFontSize</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// set 1rem = viewWidth / 10</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 设置root元素的fontSize = 其clientWidth / 10 + ‘px’</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">setRemUnit</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> rem </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> docEl</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">clientWidth</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">/</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">10</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>    docEl</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">style</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">fontSize</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> rem </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'px'</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span>  </span><span class="token" style="color: rgb(218, 208, 133);">setRemUnit</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">26</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">27</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 当页面展示或重新设置大小的时候，触发重新</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">28</span><span>  </span><span class="token dom" style="color: rgb(198, 197, 254);">window</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">addEventListener</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'resize'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> setRemUnit</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">29</span><span>  </span><span class="token dom" style="color: rgb(198, 197, 254);">window</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">addEventListener</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'pageshow'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">e</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">30</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>e</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">persisted</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">31</span><span>      </span><span class="token" style="color: rgb(218, 208, 133);">setRemUnit</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">32</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">33</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">34</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">35</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 检测0.5px的支持，支持则root元素的class中有hairlines</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">36</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>dpr </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">37</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> fakeBody </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">createElement</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'body'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">38</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> testElement </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">createElement</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'div'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">39</span><span>    testElement</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">style</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">border</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'.5px solid transparent'</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">40</span><span>    fakeBody</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">appendChild</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>testElement</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">41</span><span>    docEl</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">appendChild</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>fakeBody</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">42</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>testElement</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">offsetHeight</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">43</span><span>      docEl</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">classList</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">add</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'hairlines'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">44</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">45</span><span>    docEl</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">removeChild</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>fakeBody</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">46</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">47</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token dom" style="color: rgb(198, 197, 254);">window</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token dom" style="color: rgb(198, 197, 254);">document</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre></div>
        `
    },
    "807ac3c6-6e75-4cbf-9a5d-3084f860ea11": {
        "answer": `
        <div class="markdown-body"><p>本答案将介绍js中常用的几种排序算法，并结合v8中相关源码分析sort实现的策略</p>
        <h2>常见排序算法</h2>
        <p>首先温习下排序算法需要关注的两大要素</p>
        <h3>时间复杂度</h3>
        <p>描述该算法的运行时间，通常用<code>大O</code>描述，附上一张时间复杂度曲线图帮助理解</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/911d36f5d6e345aba9cd29ccd7e8297b~tplv-k3u1fbpfcp-watermark.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h3>空间复杂度</h3>
        <p>度量一个算法在运行过程中占用存储空间大小</p>
        <h3>常见排序</h3>
        <p>常见的<a href="https://gitee.com/webfrontup/javascript-algorithms">十大经典排序算法</a>就不在这科普了，根据特性可将它们从不同角度进行分类</p>
        <ul>
        <li>
        <p>是否基于比较：比较类排序和非比较类排序</p>
        </li>
        <li>
        <p>是否稳定：稳定类排序和不稳定类排序</p>
        </li>
        </ul>
        <p>通常我们<code>从是否基于排序</code>的视角进行分类</p>
        <ul>
        <li>
        <p>比较类排序</p>
        <p>通过比较来决定元素间的相对次序，其时间复杂度不能突破<code> O(nlogn)</code>，因此也称为<code>非线性时间比较</code>类排序。</p>
        </li>
        <li>
        <p>非比较类排序</p>
        <p>不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以<code>线性时间运行</code>，因此也称为<code>线性时间非比较</code>类排序。</p>
        </li>
        </ul>
        <p>具体分类枚举可以结合下图理解</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/38e8c91cb7184b9fbbee18013f20bc59~tplv-k3u1fbpfcp-watermark.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <p>接下来我们写下几个常见的经典排序</p>
        <h4>快速排序</h4>
        <p>快速排序主要使用<code>递归分支</code>的思想，通过一趟排序，将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可以分别对这两部分记录继续进行排序，以达到整个序列有序。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> a </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">25</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">76</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">34</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">232</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">6</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">456</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">221</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">quickSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">array</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">quick</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">arr</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> arr
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> index </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Math</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">floor</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>len </span><span class="token" style="color: rgb(237, 237, 237);">&gt;&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> pivot </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">splice</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>index</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> left </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> right </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>      </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> pivot</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>        right</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">push</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>      </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;=</span><span> pivot</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>        left</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">push</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>      </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">quick</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>left</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">concat</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>pivot</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">quick</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>right</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> result </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">quick</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>array</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> result
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span></span><span class="token" style="color: rgb(218, 208, 133);">quickSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span class="token" style="color: rgb(124, 124, 124);">// &nbsp;[ 6, 25, 34, 76, 221, 232, 456]</span></code></div></div></pre>
        <h4>堆排序</h4>
        <p>堆排序是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质，即子结点的键值或索引总是小于（或者大于）它的父节点。堆的底层实际上就是一棵<code>完全二叉树</code>，可以用数组实现。</p>
        <p>根节点最大的堆叫作<code>大根堆</code>，根节点最小的堆叫作<code>小根堆</code>，你可以根据从大到小排序或者从小到大来排序，分别建立对应的堆就可以。请看下面的代码。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> a </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">25</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">76</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">34</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">232</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">6</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">456</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">221</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">heap_sort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">arr</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> len </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> k </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">swap</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">i</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> j</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> temp </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>    arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> temp
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">max_heapify</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">start</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> dad </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> start
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> son </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> dad </span><span class="token" style="color: rgb(237, 237, 237);">*</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">2</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>son </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>son </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> end </span><span class="token" style="color: rgb(237, 237, 237);">&amp;&amp;</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>son</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>son </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>      son</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>dad</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;=</span><span> arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>son</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>      </span><span class="token" style="color: rgb(218, 208, 133);">swap</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>dad</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> son</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>      </span><span class="token" style="color: rgb(218, 208, 133);">max_heapify</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>son</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Math</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">floor</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>len </span><span class="token" style="color: rgb(237, 237, 237);">/</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i</span><span class="token" style="color: rgb(237, 237, 237);">--</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">max_heapify</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> len</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">26</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">27</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> len </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> k</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j</span><span class="token" style="color: rgb(237, 237, 237);">--</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">28</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">swap</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">29</span><span>    </span><span class="token" style="color: rgb(218, 208, 133);">max_heapify</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> j</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">30</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">31</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> arr
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">32</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">33</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">34</span><span></span><span class="token" style="color: rgb(218, 208, 133);">heap_sort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// [6, 25, 34, 76, 221, 232, 456]</span></code></div></div></pre>
        <h4>归并排序</h4>
        <p>归并排序是建立在<code>归并</code>操作上的一种有效的排序算法，该算法是采用<code>分治法</code>的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为<code>二路归并</code>。</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> a </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">25</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">76</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">34</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">232</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">6</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">456</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">221</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">mergeSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">array</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">merge</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">right</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> left</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> result </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> il </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">let</span><span> ir </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">while</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>il </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> left</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&amp;&amp;</span><span> ir </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> right</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>      </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>left</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>il</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> right</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>ir</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span>        result</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">push</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>left</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>il</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>      </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>        result</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">push</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>right</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>ir</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>      </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">while</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>il </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> left</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>      result</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">push</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>left</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>il</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">while</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>ir </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> right</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>      result</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">push</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>right</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>ir</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> result
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token function-variable" style="color: rgb(218, 208, 133);">mergeSort</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token parameter">array</span><span> </span><span class="token arrow" style="color: rgb(237, 237, 237);">=&gt;</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>array</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> array </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> mid </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token known-class-name" style="color: rgb(255, 255, 182); text-decoration: underline;">Math</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">floor</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>array</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">/</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> left </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> array</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">slice</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> mid</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">26</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> right </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> array</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">slice</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>mid</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> array</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">27</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">merge</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(218, 208, 133);">mergeSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>left</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">mergeSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>right</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">28</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">29</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">mergeSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>array</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">30</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">31</span><span></span><span class="token" style="color: rgb(218, 208, 133);">mergeSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// [6, 25, 34, 76, 221, 232, 456]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 3.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">32</span>
        </code></div></div></pre>
        <p>最后附上一张各排序算法统计对照表:</p>
        <p><div class="ant-image"><img class="ant-image-img" src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e017396d617e4507a6700c11d1249a5b~tplv-k3u1fbpfcp-watermark.image"><div class="ant-image-mask"><div class="ant-image-mask-info"><span role="img" aria-label="eye" class="anticon anticon-eye"><svg viewBox="64 64 896 896" focusable="false" data-icon="eye" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z"></path></svg></span>预览</div></div></div></p>
        <h2>js中的sort方法</h2>
        <h3>sort方法基本使用</h3>
        <blockquote>
        <p>arr.sort([compareFunction])</p>
        </blockquote>
        <p>如果不传入 compareFunction，则元素按照转换为字符串的各个字符的 <code>Unicode</code> 位点进行排序，有些同学经常在整数排序上犯错误，多半是因为遗漏了这一规则</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> names </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(168, 255, 96);">'tom'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'jesse'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'jack'</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>names</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">sort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>names</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// ["jack", "jesse", "tom"]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> array1 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">30</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">4</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">21</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">100000</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span>array1</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">sort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>array1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// [1, 100000, 21, 30, 4]</span></code></div></div></pre>
        <p>如果指明了 compareFunction 参数 ，那么数组会按照调用该函数的<code>返回值排序</code>，即 a 和 b 是两个将要被比较的元素：</p>
        <ul>
        <li>compareFunction（a, b）&lt; 0，a 会被排列到 b 之前</li>
        <li>compareFunction（a, b）=== 0，a 和 b 的相对位置不变</li>
        <li>compareFunction（a, b）&gt; 0，b 会被排列到 a 之前</li>
        </ul>
        <h3>sort源码分析</h3>
        <p>查阅 <a href="https://github.com/v8/v8/blob/98d735069d0937f367852ed968a33210ceb527c2/src/js/array.js#L709">v8源码sort部分</a> 我们可以发现，对于需要排序的元素个数n，具体排序策略有几下中情形：</p>
        <ul>
        <li>当 n&lt;=10 时，采用<code>插入排序</code>；</li>
        <li>当 n&gt;10 时，采用<code>三路快速排序</code>；</li>
        <li>10&lt;n &lt;=1000，采用中位数作为哨兵元素；</li>
        <li>n&gt;1000，每隔 200~215 个元素挑出一个元素，放到一个新数组中，然后对它排序，找到中间位置的数，以此作为中位数。</li>
        </ul>
        <p>乍一看结论你可能会纠结两个问题</p>
        <h5>1、为何元素较少的时候要用快排</h5>
        <p>其实仔细分析一下不难究其原因。对于插排和快排，理论上的平均时间复杂度分别为O(n^2)和O(nlogn)，其中插排在最好情况下的时间复杂度是 O(n)。对比不难得出结论，当n足够小的时候，快排优势变小。事实上插排经优化后对于小数据集的排序性能可以超过快排。</p>
        <h5>2、为何要选择哨兵元素</h5>
        <p>因为快速排序的性能瓶颈在于<code>递归的深度</code>，最坏的情况是每次的哨兵都是最小元素或者最大元素，那么进行 partition（一边是小于哨兵的元素，另一边是大于哨兵的元素）时，就会有一边是空的。如果这么排下去，递归的层数就达到了<code>n</code>, 而每一层的复杂度是<code> O(n)</code>，因此快排这时候会<code>退化</code>成<code>O(n^2)</code>级别。</p>
        <p>这种情况是要尽力避免的，那么如何来避免？就是让哨兵元素尽可能地处于数组的中间位置，让最大或者最小的情况尽可能少</p>
        <p>最后我们看下源码中的sort的基本结构</p>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">ArraySort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">comparefn</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(153, 204, 153);">CHECK_OBJECT_COERCIBLE</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span class="token" style="color: rgb(168, 255, 96);">"Array.prototype.sort"</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> array </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">TO_OBJECT</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">this</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> length </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">TO_LENGTH</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>array</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">InnerArraySort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>array</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> length</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> comparefn</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">InnerArraySort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">array</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> length</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> comparefn</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">8</span><span></span><span class="token" style="color: rgb(124, 124, 124);">// 比较函数未传入</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">9</span><span></span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(237, 237, 237);">!</span><span class="token" style="color: rgb(153, 204, 153);">IS_CALLABLE</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>comparefn</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">10</span><span>      </span><span class="token function-variable" style="color: rgb(218, 208, 133);">comparefn</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">x</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">11</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x </span><span class="token" style="color: rgb(237, 237, 237);">===</span><span> y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">12</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(237, 237, 237);">%</span><span class="token" style="color: rgb(218, 208, 133);">_IsSmi</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&amp;&amp;</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">%</span><span class="token" style="color: rgb(218, 208, 133);">_IsSmi</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">13</span><span>          </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">%</span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">SmiLexicographicCompare</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">14</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">15</span><span>        x </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">TO_STRING</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">16</span><span>        y </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(153, 204, 153);">TO_STRING</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">17</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>x </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> y</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">18</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> x </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> y </span><span class="token" style="color: rgb(237, 237, 237);">?</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">19</span><span>   </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">20</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">21</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">InsertionSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">a</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> </span><span class="token parameter module" style="color: rgb(150, 203, 254);">from</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> to</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">22</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 插入排序</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">23</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> to</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">24</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> element </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">25</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> j</span><span class="token" style="color: rgb(237, 237, 237);">--</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">26</span><span>          </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> tmp </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">27</span><span>          </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> order </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">comparefn</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>tmp</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> element</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">28</span><span>          </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>order </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">29</span><span>            a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> tmp</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">30</span><span>          </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">31</span><span>            </span><span class="token control-flow" style="color: rgb(150, 203, 254);">break</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">32</span><span>          </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">33</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">34</span><span>      a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> element</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">35</span><span>   </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">36</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">37</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">GetThirdIndex</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">a</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> </span><span class="token parameter module" style="color: rgb(150, 203, 254);">from</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> to</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>   </span><span class="token" style="color: rgb(124, 124, 124);">// 元素个数大于1000时寻找哨兵元素</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">38</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> t_array </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(150, 203, 254);">new</span><span> </span><span class="token" style="color: rgb(255, 255, 182); text-decoration: underline;">InternalArray</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">39</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> increment </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">200</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>to </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&amp;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">15</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">40</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> j </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">41</span><span>  </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">42</span><span>  to </span><span class="token" style="color: rgb(237, 237, 237);">-=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">43</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> to</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">+=</span><span> increment</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">44</span><span>     t_array</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>j</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">45</span><span>     j</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">46</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">47</span><span>  t_array</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">sort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">function</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">a</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> b</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">48</span><span>     </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">comparefn</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> b</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">49</span><span>  </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">50</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> third_index </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> t_array</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>t_array</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token property-access">length</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&gt;&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">51</span><span>  </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span> third_index</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">52</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">53</span><span></span><span class="token" style="color: rgb(150, 203, 254);">function</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">QuickSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token parameter">a</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> </span><span class="token parameter module" style="color: rgb(150, 203, 254);">from</span><span class="token parameter" style="color: rgb(197, 200, 198);">,</span><span class="token parameter"> to</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>  </span><span class="token" style="color: rgb(124, 124, 124);">// 快速排序实现</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">54</span><span>      </span><span class="token" style="color: rgb(124, 124, 124);">//哨兵位置</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">55</span><span>      </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> third_index </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">56</span><span>      </span><span class="token control-flow" style="color: rgb(150, 203, 254);">while</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(153, 204, 153);">true</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">57</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>to </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&lt;=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">10</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">58</span><span>          </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">InsertionSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> to</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 数据量小，使用插入排序，速度较快</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">59</span><span>          </span><span class="token control-flow" style="color: rgb(150, 203, 254);">return</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">60</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">61</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>to </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1000</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">62</span><span>          third_index </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">GetThirdIndex</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> to</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">63</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">64</span><span>          </span><span class="token" style="color: rgb(124, 124, 124);">// 小于1000 直接取中点</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">65</span><span>          third_index </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>to </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">&gt;&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">66</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">67</span><span>        </span><span class="token" style="color: rgb(124, 124, 124);">// 下面开始快排</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">68</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> v0 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">69</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> v1 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>to </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">70</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> v2 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>third_index</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">71</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> c01 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">comparefn</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>v0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> v1</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">72</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>c01 </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">73</span><span>          </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> tmp </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">74</span><span>          v0 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">75</span><span>          v1 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> tmp</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">76</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">77</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> c02 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">comparefn</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>v0</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> v2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">78</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>c02 </span><span class="token" style="color: rgb(237, 237, 237);">&gt;=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">79</span><span>          </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> tmp </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">80</span><span>          v0 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v2</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">81</span><span>          v2 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">82</span><span>          v1 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> tmp</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">83</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">84</span><span>          </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> c12 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">comparefn</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>v1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> v2</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">85</span><span>          </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>c12 </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">86</span><span>            </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> tmp </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">87</span><span>            v1 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v2</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">88</span><span>            v2 </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> tmp</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">89</span><span>          </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">90</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">91</span><span>        a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v0</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">92</span><span>        a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>to </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v2</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">93</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> pivot </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> v1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">94</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> low_end </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> 
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">95</span><span>        </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> high_start </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> to </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">96</span><span>        a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>third_index</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>low_end</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">97</span><span>        a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>low_end</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> pivot</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">98</span><span>        </span><span class="token literal-property" style="color: rgb(150, 203, 254);">partition</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">for</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> low_end </span><span class="token" style="color: rgb(237, 237, 237);">+</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> high_start</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span> i</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">99</span><span>          </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> element </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">100</span><span>          </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> order </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">comparefn</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>element</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> pivot</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">101</span><span>          </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>order </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">102</span><span>            a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>low_end</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">103</span><span>            a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>low_end</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> element</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">104</span><span>            low_end</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">105</span><span>          </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>order </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">106</span><span>            </span><span class="token control-flow" style="color: rgb(150, 203, 254);">do</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">107</span><span>              high_start</span><span class="token" style="color: rgb(237, 237, 237);">--</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">108</span><span>              </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>high_start </span><span class="token" style="color: rgb(237, 237, 237);">==</span><span> i</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">break</span><span> partition</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">109</span><span>              </span><span class="token" style="color: rgb(150, 203, 254);">var</span><span> top_elem </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>high_start</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">110</span><span>              order </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(218, 208, 133);">comparefn</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>top_elem</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> pivot</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">111</span><span>            </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">while</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>order </span><span class="token" style="color: rgb(237, 237, 237);">&gt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">112</span><span>            a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>high_start</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">113</span><span>            a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>high_start</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> element</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">114</span><span>            </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>order </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">115</span><span>              element </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">116</span><span>              a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>low_end</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">117</span><span>              a</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>low_end</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> element</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">118</span><span>              low_end</span><span class="token" style="color: rgb(237, 237, 237);">++</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">119</span><span>            </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">120</span><span>          </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">121</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">122</span><span>        </span><span class="token" style="color: rgb(124, 124, 124);">// 快排的核心思路，递归调用快速排序方法</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">123</span><span>        </span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>to </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> high_start </span><span class="token" style="color: rgb(237, 237, 237);">&lt;</span><span> low_end </span><span class="token" style="color: rgb(237, 237, 237);">-</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">124</span><span>          </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">QuickSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> high_start</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> to</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">125</span><span>          to </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> low_end</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">126</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token control-flow" style="color: rgb(150, 203, 254);">else</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">127</span><span>          </span><span class="token maybe-class-name" style="color: rgb(218, 208, 133);">QuickSort</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> low_end</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">128</span><span>          </span><span class="token module" style="color: rgb(150, 203, 254);">from</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> high_start</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">129</span><span>        </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">130</span><span>    </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 4.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">131</span><span>&nbsp; </span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre></div>
        `
    },
    "5e131c75-d26e-4527-8f51-29d842f3c829": {
        "answer": `<div class="markdown-body"><h3>关于ES6和JavaScript的关系</h3>
        <h5>1、ES6是对于ES2015+的俗称，也可以说是通常叫法，那么，ES6是什么呢？</h5>
        <p>ES 全称是ECAMScript，它是JavaScript基础构建的一种语言，JavaScript正是建立在ECAMScript语言的基础规范中建立使用的，那么，ECAMScript的使用，对于JavaScript至关重要！</p>
        <p>在我的理解中，ECAMScript是一种语言层面的东西，它只是定义了JavaScript以及在它基础之上建立的其他语言的语法规范，而JavaScript的语言，更关于一种平台性质在其中。</p>
        <p>JavaScript包括 ECAMScript、DOM、BOM三个组成部分，DOM和BOM是web API提供的接口或者是JavaScript和浏览器之间进行交互的部分，实质就是操纵文档元素，进行展示布局，而ECAMScript在JavaScript中其中语法的作用，它不会去跟文档有直接的关系，但是他的数据处理完成后会通过web API展示在文档中。</p>
        <h3>ES6新特性的分类</h3>
        <p>新特性主要归为四大类：</p>
        <ul>
        <li>解决原有语法上的一些不足</li>
        </ul>
        <p>比如let 和 const 的块级作用域</p>
        <ul>
        <li>对原有语法进行增强</li>
        </ul>
        <p>比如解构、展开、参数默认值、模板字符串</p>
        <ul>
        <li>全新的对象、全新的方法、全新的功能</li>
        </ul>
        <p>比如promise、proxy、object的assign、is</p>
        <ul>
        <li>全新的数据类型和数据结构</li>
        </ul>
        <p>比如symbol、set、map</p>
        <p>下面具体进行介绍</p>
        <h2>1. let、const 块级作用域以及和 var 的区别</h2>
        <ul>
        <li>let、const 声明的变量，在 for，if 语句中，会形成块级作用域，块级作用域内的变量，不能被作用域外部使用</li>
        <li>let、const 声明变量不再会有声明提升，在变量声明之前使用运行时会报错</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">//块级作用域一级块级作用域的使用</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(153, 204, 153);">true</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> param </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'param in if block'</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>param</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//param in if block</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>param</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//块级作用域外访问内部定义的变量，ReferenceError: param is not defined</span></code></div></div></pre>
        <ul>
        <li>块级作用域声明变量，会出现“暂时性死区”，块级作用域声明变量前使用变量，将会报错</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">// 暂时性死区</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">100</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token control-flow" style="color: rgb(150, 203, 254);">if</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>  </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//ReferenceError: Cannot access 'i' before initialization</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>  </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">1000</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token" style="color: rgb(197, 200, 198);">}</span></code></div></div></pre>
        <ul>
        <li>const 声明的是一个常量，声明必须初始化</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span>    </span><span class="token" style="color: rgb(124, 124, 124);">// const常量声明必须初始化</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>    </span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> i</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span>    i </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">10</span><span class="token" style="color: rgb(197, 200, 198);">;</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span>    </span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>i</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//SyntaxError: Missing initializer in const declaration</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span>
        </code></div></div></pre>
        <ul>
        <li>如果 const 声明的是基本类型常量，初始化之后不能修改；引用类型的常量，可以修改其成员变量；</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">// 基本类型常量不能修改，引用类型常量能修改属性</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> str </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'str'</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span>str </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'str1'</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//TypeError: Assignment to constant variable.</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> arr </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">3</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">100</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">7</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>arr</span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">0</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//100</span></code></div></div></pre>
        <ul>
        <li>和 var 的区别</li>
        </ul>
        <table><thead><tr><th>声明方式</th><th>变量提升</th><th>作用域</th><th>初始值</th><th>重复定义</th></tr></thead><tbody><tr><td>var</td><td>是</td><td>函数级</td><td>不需要</td><td>允许</td></tr><tr><td>let</td><td>否</td><td>块级</td><td>不需要</td><td>不允许</td></tr><tr><td>const</td><td>否</td><td>块级</td><td>必需</td><td>不允许</td></tr></tbody></table>
        <h2>2.解构-快速提取数组/对象中的元素</h2>
        <ul>
        <li>
        <p><strong>数组解构</strong></p>
        </li>
        <li>
        <p>单独解构-根据数组索引，将数组解构成单独的元素</p>
        </li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> arr </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">3</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> b</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> c</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>a</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> b</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> c</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//1,2,3</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> d</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">6</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>d</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//3</span></code></div></div></pre>
        <ul>
        <li>默认值，解构时可以给变量设置默认值，数组没有这个元素的话</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> arr </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">3</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> defaultVal </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'4'</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'设置默认值'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> defaultVal</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <ul>
        <li>剩余解构-用 "...+变量名" 解构剩余参数到新数组，只能用一次</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> arr </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(255, 115, 253);">1</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">2</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">3</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span>
        <span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span>e</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token spread" style="color: rgb(237, 237, 237);">...</span><span>rest</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> arr
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>rest</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//[2, 3]</span></code></div></div></pre>
        <ul>
        <li>实例应用</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(124, 124, 124);">// 拆分字符串</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> str </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'xiaobai/18/200'</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> strArr </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> str</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">split</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span class="token" style="color: rgb(168, 255, 96);">'/'</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">4</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">[</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> age</span><span class="token" style="color: rgb(197, 200, 198);">]</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> strArr
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">5</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>age</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">//18</span></code></div></div></pre>
        <ul>
        <li>
        <p><strong>对象解构</strong></p>
        </li>
        <li>
        <p>单个/多个解构-跟数组解构差不多</p>
        </li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> obj </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">name</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'xiaohui'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">age</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">18</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">height</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token nil" style="color: rgb(150, 203, 254);">undefined</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span> name</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> age </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> obj
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>name</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> age</span><span class="token" style="color: rgb(197, 200, 198);">)</span><span> </span><span class="token" style="color: rgb(124, 124, 124);">// 'xiaohui', 18</span></code></div></div></pre>
        <ul>
        <li>解构+重命名-给解构出来的变量重命名</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> obj </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">name</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'xiaohui'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">age</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">18</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">height</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token nil" style="color: rgb(150, 203, 254);">undefined</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">mame</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> objMame </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> obj
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>objMame</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <ul>
        <li>默认值-给解构变量设置默认值</li>
        </ul>
        <pre><div class="codeBox___24JI7"><button class="copyBtn___3UMAO">复制</button><div style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto; border-radius: 0.3em; background: rgb(29, 31, 33);"><code class="language-js" style="color: rgb(197, 200, 198); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-family: Inconsolata, Monaco, Consolas, &quot;Courier New&quot;, Courier, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none;"><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">1</span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> obj </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">name</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(168, 255, 96);">'xiaohui'</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">age</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token" style="color: rgb(255, 115, 253);">18</span><span class="token" style="color: rgb(197, 200, 198);">,</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">height</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> </span><span class="token nil" style="color: rgb(150, 203, 254);">undefined</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span>
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">2</span><span></span><span class="token" style="color: rgb(150, 203, 254);">const</span><span> </span><span class="token" style="color: rgb(197, 200, 198);">{</span><span> </span><span class="token literal-property" style="color: rgb(150, 203, 254);">mame</span><span class="token" style="color: rgb(237, 237, 237);">:</span><span> objMame </span><span class="token" style="color: rgb(197, 200, 198);">}</span><span> </span><span class="token" style="color: rgb(237, 237, 237);">=</span><span> obj
        </span><span class="linenumber react-syntax-highlighter-line-number" style="display: inline-block; min-width: 2.25em; padding-right: 1em; text-align: right; user-select: none; color: rgb(124, 124, 124);">3</span><span></span><span class="token console" style="color: rgb(255, 255, 182); text-decoration: underline;">console</span><span class="token" style="color: rgb(197, 200, 198);">.</span><span class="token method property-access" style="color: rgb(218, 208, 133);">log</span><span class="token" style="color: rgb(197, 200, 198);">(</span><span>objMame</span><span class="token" style="color: rgb(197, 200, 198);">)</span></code></div></div></pre>
        <h2>3.模板字符串</h2>
        <p>用法：使用将字符串包裹起来</p>
        <p>功能：可以换行、插值、使用标签函数进行字符串操作</p>
        <p>示例：</p>
        <ul>
        <li>换行/插值</li>
        </ul>
        `
    }
}